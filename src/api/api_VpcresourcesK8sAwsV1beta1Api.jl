# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

struct VpcresourcesK8sAwsV1beta1Api <: SwaggerApi
    client::Swagger.Client
end

function _swaggerinternal_createVpcresourcesK8sAwsV1beta1NamespacedSecurityGroupPolicy(_api::VpcresourcesK8sAwsV1beta1Api, namespace::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "POST", AwsK8sVpcresourcesV1beta1SecurityGroupPolicy, "/apis/vpcresources.k8s.aws/v1beta1/namespaces/{namespace}/securitygrouppolicies", ["BearerToken"], body)
    Swagger.set_param(_ctx.path, "namespace", namespace)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "fieldManager", fieldManager)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

create a SecurityGroupPolicy
Param: namespace::String (required)
Param: body::AwsK8sVpcresourcesV1beta1SecurityGroupPolicy (required)
Param: pretty::String
Param: dryRun::String
Param: fieldManager::String
Return: AwsK8sVpcresourcesV1beta1SecurityGroupPolicy
"""
function createVpcresourcesK8sAwsV1beta1NamespacedSecurityGroupPolicy(_api::VpcresourcesK8sAwsV1beta1Api, namespace::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_createVpcresourcesK8sAwsV1beta1NamespacedSecurityGroupPolicy(_api, namespace, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function createVpcresourcesK8sAwsV1beta1NamespacedSecurityGroupPolicy(_api::VpcresourcesK8sAwsV1beta1Api, response_stream::Channel, namespace::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_createVpcresourcesK8sAwsV1beta1NamespacedSecurityGroupPolicy(_api, namespace, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_deleteVpcresourcesK8sAwsV1beta1CollectionNamespacedSecurityGroupPolicy(_api::VpcresourcesK8sAwsV1beta1Api, namespace::String; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "DELETE", IoK8sApimachineryPkgApisMetaV1StatusV2, "/apis/vpcresources.k8s.aws/v1beta1/namespaces/{namespace}/securitygrouppolicies", ["BearerToken"])
    Swagger.set_param(_ctx.path, "namespace", namespace)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "allowWatchBookmarks", allowWatchBookmarks)  # type Bool
    Swagger.set_param(_ctx.query, "continue", __continue__)  # type String
    Swagger.set_param(_ctx.query, "fieldSelector", fieldSelector)  # type String
    Swagger.set_param(_ctx.query, "labelSelector", labelSelector)  # type String
    Swagger.set_param(_ctx.query, "limit", limit)  # type Int32
    Swagger.set_param(_ctx.query, "resourceVersion", resourceVersion)  # type String
    Swagger.set_param(_ctx.query, "resourceVersionMatch", resourceVersionMatch)  # type String
    Swagger.set_param(_ctx.query, "timeoutSeconds", timeoutSeconds)  # type Int32
    Swagger.set_param(_ctx.query, "watch", watch)  # type Bool
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

delete collection of SecurityGroupPolicy
Param: namespace::String (required)
Param: pretty::String
Param: allowWatchBookmarks::Bool
Param: __continue__::String
Param: fieldSelector::String
Param: labelSelector::String
Param: limit::Int32
Param: resourceVersion::String
Param: resourceVersionMatch::String
Param: timeoutSeconds::Int32
Param: watch::Bool
Return: IoK8sApimachineryPkgApisMetaV1StatusV2
"""
function deleteVpcresourcesK8sAwsV1beta1CollectionNamespacedSecurityGroupPolicy(_api::VpcresourcesK8sAwsV1beta1Api, namespace::String; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteVpcresourcesK8sAwsV1beta1CollectionNamespacedSecurityGroupPolicy(_api, namespace; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function deleteVpcresourcesK8sAwsV1beta1CollectionNamespacedSecurityGroupPolicy(_api::VpcresourcesK8sAwsV1beta1Api, response_stream::Channel, namespace::String; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteVpcresourcesK8sAwsV1beta1CollectionNamespacedSecurityGroupPolicy(_api, namespace; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_deleteVpcresourcesK8sAwsV1beta1NamespacedSecurityGroupPolicy(_api::VpcresourcesK8sAwsV1beta1Api, name::String, namespace::String; pretty=nothing, body=nothing, dryRun=nothing, gracePeriodSeconds=nothing, orphanDependents=nothing, propagationPolicy=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "DELETE", IoK8sApimachineryPkgApisMetaV1StatusV2, "/apis/vpcresources.k8s.aws/v1beta1/namespaces/{namespace}/securitygrouppolicies/{name}", ["BearerToken"], body)
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.path, "namespace", namespace)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "gracePeriodSeconds", gracePeriodSeconds)  # type Int32
    Swagger.set_param(_ctx.query, "orphanDependents", orphanDependents)  # type Bool
    Swagger.set_param(_ctx.query, "propagationPolicy", propagationPolicy)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

delete a SecurityGroupPolicy
Param: name::String (required)
Param: namespace::String (required)
Param: pretty::String
Param: body::IoK8sApimachineryPkgApisMetaV1DeleteOptionsV2
Param: dryRun::String
Param: gracePeriodSeconds::Int32
Param: orphanDependents::Bool
Param: propagationPolicy::String
Return: IoK8sApimachineryPkgApisMetaV1StatusV2
"""
function deleteVpcresourcesK8sAwsV1beta1NamespacedSecurityGroupPolicy(_api::VpcresourcesK8sAwsV1beta1Api, name::String, namespace::String; pretty=nothing, body=nothing, dryRun=nothing, gracePeriodSeconds=nothing, orphanDependents=nothing, propagationPolicy=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteVpcresourcesK8sAwsV1beta1NamespacedSecurityGroupPolicy(_api, name, namespace; pretty=pretty, body=body, dryRun=dryRun, gracePeriodSeconds=gracePeriodSeconds, orphanDependents=orphanDependents, propagationPolicy=propagationPolicy, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function deleteVpcresourcesK8sAwsV1beta1NamespacedSecurityGroupPolicy(_api::VpcresourcesK8sAwsV1beta1Api, response_stream::Channel, name::String, namespace::String; pretty=nothing, body=nothing, dryRun=nothing, gracePeriodSeconds=nothing, orphanDependents=nothing, propagationPolicy=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteVpcresourcesK8sAwsV1beta1NamespacedSecurityGroupPolicy(_api, name, namespace; pretty=pretty, body=body, dryRun=dryRun, gracePeriodSeconds=gracePeriodSeconds, orphanDependents=orphanDependents, propagationPolicy=propagationPolicy, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_listVpcresourcesK8sAwsV1beta1NamespacedSecurityGroupPolicy(_api::VpcresourcesK8sAwsV1beta1Api, namespace::String; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "GET", AwsK8sVpcresourcesV1beta1SecurityGroupPolicyList, "/apis/vpcresources.k8s.aws/v1beta1/namespaces/{namespace}/securitygrouppolicies", ["BearerToken"])
    Swagger.set_param(_ctx.path, "namespace", namespace)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "allowWatchBookmarks", allowWatchBookmarks)  # type Bool
    Swagger.set_param(_ctx.query, "continue", __continue__)  # type String
    Swagger.set_param(_ctx.query, "fieldSelector", fieldSelector)  # type String
    Swagger.set_param(_ctx.query, "labelSelector", labelSelector)  # type String
    Swagger.set_param(_ctx.query, "limit", limit)  # type Int32
    Swagger.set_param(_ctx.query, "resourceVersion", resourceVersion)  # type String
    Swagger.set_param(_ctx.query, "resourceVersionMatch", resourceVersionMatch)  # type String
    Swagger.set_param(_ctx.query, "timeoutSeconds", timeoutSeconds)  # type Int32
    Swagger.set_param(_ctx.query, "watch", watch)  # type Bool
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

list objects of kind SecurityGroupPolicy
Param: namespace::String (required)
Param: pretty::String
Param: allowWatchBookmarks::Bool
Param: __continue__::String
Param: fieldSelector::String
Param: labelSelector::String
Param: limit::Int32
Param: resourceVersion::String
Param: resourceVersionMatch::String
Param: timeoutSeconds::Int32
Param: watch::Bool
Return: AwsK8sVpcresourcesV1beta1SecurityGroupPolicyList
"""
function listVpcresourcesK8sAwsV1beta1NamespacedSecurityGroupPolicy(_api::VpcresourcesK8sAwsV1beta1Api, namespace::String; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_listVpcresourcesK8sAwsV1beta1NamespacedSecurityGroupPolicy(_api, namespace; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function listVpcresourcesK8sAwsV1beta1NamespacedSecurityGroupPolicy(_api::VpcresourcesK8sAwsV1beta1Api, response_stream::Channel, namespace::String; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_listVpcresourcesK8sAwsV1beta1NamespacedSecurityGroupPolicy(_api, namespace; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_listVpcresourcesK8sAwsV1beta1SecurityGroupPolicyForAllNamespaces(_api::VpcresourcesK8sAwsV1beta1Api; allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, pretty=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "GET", AwsK8sVpcresourcesV1beta1SecurityGroupPolicyList, "/apis/vpcresources.k8s.aws/v1beta1/securitygrouppolicies", ["BearerToken"])
    Swagger.set_param(_ctx.query, "allowWatchBookmarks", allowWatchBookmarks)  # type Bool
    Swagger.set_param(_ctx.query, "continue", __continue__)  # type String
    Swagger.set_param(_ctx.query, "fieldSelector", fieldSelector)  # type String
    Swagger.set_param(_ctx.query, "labelSelector", labelSelector)  # type String
    Swagger.set_param(_ctx.query, "limit", limit)  # type Int32
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "resourceVersion", resourceVersion)  # type String
    Swagger.set_param(_ctx.query, "resourceVersionMatch", resourceVersionMatch)  # type String
    Swagger.set_param(_ctx.query, "timeoutSeconds", timeoutSeconds)  # type Int32
    Swagger.set_param(_ctx.query, "watch", watch)  # type Bool
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

list objects of kind SecurityGroupPolicy
Param: allowWatchBookmarks::Bool
Param: __continue__::String
Param: fieldSelector::String
Param: labelSelector::String
Param: limit::Int32
Param: pretty::String
Param: resourceVersion::String
Param: resourceVersionMatch::String
Param: timeoutSeconds::Int32
Param: watch::Bool
Return: AwsK8sVpcresourcesV1beta1SecurityGroupPolicyList
"""
function listVpcresourcesK8sAwsV1beta1SecurityGroupPolicyForAllNamespaces(_api::VpcresourcesK8sAwsV1beta1Api; allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, pretty=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_listVpcresourcesK8sAwsV1beta1SecurityGroupPolicyForAllNamespaces(_api; allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, pretty=pretty, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function listVpcresourcesK8sAwsV1beta1SecurityGroupPolicyForAllNamespaces(_api::VpcresourcesK8sAwsV1beta1Api, response_stream::Channel; allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, pretty=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_listVpcresourcesK8sAwsV1beta1SecurityGroupPolicyForAllNamespaces(_api; allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, pretty=pretty, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_patchVpcresourcesK8sAwsV1beta1NamespacedSecurityGroupPolicy(_api::VpcresourcesK8sAwsV1beta1Api, name::String, namespace::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "PATCH", AwsK8sVpcresourcesV1beta1SecurityGroupPolicy, "/apis/vpcresources.k8s.aws/v1beta1/namespaces/{namespace}/securitygrouppolicies/{name}", ["BearerToken"], body)
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.path, "namespace", namespace)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "fieldManager", fieldManager)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json-patch+json", "application/merge-patch+json", "application/apply-patch+yaml"] : [_mediaType])
    return _ctx
end

"""

partially update the specified SecurityGroupPolicy
Param: name::String (required)
Param: namespace::String (required)
Param: body::IoK8sApimachineryPkgApisMetaV1Patch (required)
Param: pretty::String
Param: dryRun::String
Param: fieldManager::String
Return: AwsK8sVpcresourcesV1beta1SecurityGroupPolicy
"""
function patchVpcresourcesK8sAwsV1beta1NamespacedSecurityGroupPolicy(_api::VpcresourcesK8sAwsV1beta1Api, name::String, namespace::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_patchVpcresourcesK8sAwsV1beta1NamespacedSecurityGroupPolicy(_api, name, namespace, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function patchVpcresourcesK8sAwsV1beta1NamespacedSecurityGroupPolicy(_api::VpcresourcesK8sAwsV1beta1Api, response_stream::Channel, name::String, namespace::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_patchVpcresourcesK8sAwsV1beta1NamespacedSecurityGroupPolicy(_api, name, namespace, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_readVpcresourcesK8sAwsV1beta1NamespacedSecurityGroupPolicy(_api::VpcresourcesK8sAwsV1beta1Api, name::String, namespace::String; pretty=nothing, resourceVersion=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "GET", AwsK8sVpcresourcesV1beta1SecurityGroupPolicy, "/apis/vpcresources.k8s.aws/v1beta1/namespaces/{namespace}/securitygrouppolicies/{name}", ["BearerToken"])
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.path, "namespace", namespace)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "resourceVersion", resourceVersion)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

read the specified SecurityGroupPolicy
Param: name::String (required)
Param: namespace::String (required)
Param: pretty::String
Param: resourceVersion::String
Return: AwsK8sVpcresourcesV1beta1SecurityGroupPolicy
"""
function readVpcresourcesK8sAwsV1beta1NamespacedSecurityGroupPolicy(_api::VpcresourcesK8sAwsV1beta1Api, name::String, namespace::String; pretty=nothing, resourceVersion=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_readVpcresourcesK8sAwsV1beta1NamespacedSecurityGroupPolicy(_api, name, namespace; pretty=pretty, resourceVersion=resourceVersion, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function readVpcresourcesK8sAwsV1beta1NamespacedSecurityGroupPolicy(_api::VpcresourcesK8sAwsV1beta1Api, response_stream::Channel, name::String, namespace::String; pretty=nothing, resourceVersion=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_readVpcresourcesK8sAwsV1beta1NamespacedSecurityGroupPolicy(_api, name, namespace; pretty=pretty, resourceVersion=resourceVersion, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_replaceVpcresourcesK8sAwsV1beta1NamespacedSecurityGroupPolicy(_api::VpcresourcesK8sAwsV1beta1Api, name::String, namespace::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "PUT", AwsK8sVpcresourcesV1beta1SecurityGroupPolicy, "/apis/vpcresources.k8s.aws/v1beta1/namespaces/{namespace}/securitygrouppolicies/{name}", ["BearerToken"], body)
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.path, "namespace", namespace)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "fieldManager", fieldManager)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

replace the specified SecurityGroupPolicy
Param: name::String (required)
Param: namespace::String (required)
Param: body::AwsK8sVpcresourcesV1beta1SecurityGroupPolicy (required)
Param: pretty::String
Param: dryRun::String
Param: fieldManager::String
Return: AwsK8sVpcresourcesV1beta1SecurityGroupPolicy
"""
function replaceVpcresourcesK8sAwsV1beta1NamespacedSecurityGroupPolicy(_api::VpcresourcesK8sAwsV1beta1Api, name::String, namespace::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_replaceVpcresourcesK8sAwsV1beta1NamespacedSecurityGroupPolicy(_api, name, namespace, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function replaceVpcresourcesK8sAwsV1beta1NamespacedSecurityGroupPolicy(_api::VpcresourcesK8sAwsV1beta1Api, response_stream::Channel, name::String, namespace::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_replaceVpcresourcesK8sAwsV1beta1NamespacedSecurityGroupPolicy(_api, name, namespace, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

export createVpcresourcesK8sAwsV1beta1NamespacedSecurityGroupPolicy, deleteVpcresourcesK8sAwsV1beta1CollectionNamespacedSecurityGroupPolicy, deleteVpcresourcesK8sAwsV1beta1NamespacedSecurityGroupPolicy, listVpcresourcesK8sAwsV1beta1NamespacedSecurityGroupPolicy, listVpcresourcesK8sAwsV1beta1SecurityGroupPolicyForAllNamespaces, patchVpcresourcesK8sAwsV1beta1NamespacedSecurityGroupPolicy, readVpcresourcesK8sAwsV1beta1NamespacedSecurityGroupPolicy, replaceVpcresourcesK8sAwsV1beta1NamespacedSecurityGroupPolicy
