# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


@doc raw"""ProvisionerStatus defines the observed state of Provisioner

    ShKarpenterV1alpha5ProvisionerStatus(;
        conditions=nothing,
        lastScaleTime=nothing,
        resources=nothing,
    )

    - conditions::Vector{ShKarpenterV1alpha5ProvisionerStatusConditions} : Conditions is the set of conditions required for this provisioner to scale its target, and indicates whether or not those conditions are met.
    - lastScaleTime::DateTime : LastScaleTime is the last time the Provisioner scaled the number of nodes
    - resources::Dict{String, Any} : Resources is the list of resources that have been provisioned.
"""
mutable struct ShKarpenterV1alpha5ProvisionerStatus <: SwaggerModel
    conditions::Any # spec type: Union{ Nothing, Vector{ShKarpenterV1alpha5ProvisionerStatusConditions} } # spec name: conditions
    lastScaleTime::Any # spec type: Union{ Nothing, DateTime } # spec name: lastScaleTime
    resources::Any # spec type: Union{ Nothing, Dict{String, Any} } # spec name: resources

    function ShKarpenterV1alpha5ProvisionerStatus(;conditions=nothing, lastScaleTime=nothing, resources=nothing)
        o = new()
        validate_property(ShKarpenterV1alpha5ProvisionerStatus, Symbol("conditions"), conditions)
        setfield!(o, Symbol("conditions"), conditions)
        validate_property(ShKarpenterV1alpha5ProvisionerStatus, Symbol("lastScaleTime"), lastScaleTime)
        setfield!(o, Symbol("lastScaleTime"), lastScaleTime)
        validate_property(ShKarpenterV1alpha5ProvisionerStatus, Symbol("resources"), resources)
        setfield!(o, Symbol("resources"), resources)
        o
    end
end # type ShKarpenterV1alpha5ProvisionerStatus

const _property_map_ShKarpenterV1alpha5ProvisionerStatus = Dict{Symbol,Symbol}(Symbol("conditions")=>Symbol("conditions"), Symbol("lastScaleTime")=>Symbol("lastScaleTime"), Symbol("resources")=>Symbol("resources"))
const _property_types_ShKarpenterV1alpha5ProvisionerStatus = Dict{Symbol,String}(Symbol("conditions")=>"Vector{ShKarpenterV1alpha5ProvisionerStatusConditions}", Symbol("lastScaleTime")=>"DateTime", Symbol("resources")=>"Dict{String, Any}")
Base.propertynames(::Type{ ShKarpenterV1alpha5ProvisionerStatus }) = collect(keys(_property_map_ShKarpenterV1alpha5ProvisionerStatus))
Swagger.property_type(::Type{ ShKarpenterV1alpha5ProvisionerStatus }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ShKarpenterV1alpha5ProvisionerStatus[name]))}
Swagger.field_name(::Type{ ShKarpenterV1alpha5ProvisionerStatus }, property_name::Symbol) =  _property_map_ShKarpenterV1alpha5ProvisionerStatus[property_name]

function check_required(o::ShKarpenterV1alpha5ProvisionerStatus)
    true
end

function validate_property(::Type{ ShKarpenterV1alpha5ProvisionerStatus }, name::Symbol, val)
end
