# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


@doc raw"""ContainerResourceMetricSource indicates how to scale on a resource metric known to Kubernetes, as specified in requests and limits, describing each pod in the current scale target (e.g. CPU or memory).  The values will be averaged together before being compared to the target.  Such metrics are built in to Kubernetes, and have special scaling options on top of those available to normal per-pod metrics using the \&quot;pods\&quot; source.  Only one \&quot;target\&quot; type should be set.

    IoK8sApiAutoscalingV2beta1ContainerResourceMetricSource(;
        container=nothing,
        name=nothing,
        targetAverageUtilization=nothing,
        targetAverageValue=nothing,
    )

    - container::String : container is the name of the container in the pods of the scaling target
    - name::String : name is the name of the resource in question.
    - targetAverageUtilization::Int32 : targetAverageUtilization is the target value of the average of the resource metric across all relevant pods, represented as a percentage of the requested value of the resource for the pods.
    - targetAverageValue::IoK8sApimachineryPkgApiResourceQuantity : targetAverageValue is the target value of the average of the resource metric across all relevant pods, as a raw value (instead of as a percentage of the request), similar to the \&quot;pods\&quot; metric source type.
"""
mutable struct IoK8sApiAutoscalingV2beta1ContainerResourceMetricSource <: SwaggerModel
    container::Any # spec type: Union{ Nothing, String } # spec name: container
    name::Any # spec type: Union{ Nothing, String } # spec name: name
    targetAverageUtilization::Any # spec type: Union{ Nothing, Int32 } # spec name: targetAverageUtilization
    targetAverageValue::Any # spec type: Union{ Nothing, IoK8sApimachineryPkgApiResourceQuantity } # spec name: targetAverageValue

    function IoK8sApiAutoscalingV2beta1ContainerResourceMetricSource(;container=nothing, name=nothing, targetAverageUtilization=nothing, targetAverageValue=nothing)
        o = new()
        validate_property(IoK8sApiAutoscalingV2beta1ContainerResourceMetricSource, Symbol("container"), container)
        setfield!(o, Symbol("container"), container)
        validate_property(IoK8sApiAutoscalingV2beta1ContainerResourceMetricSource, Symbol("name"), name)
        setfield!(o, Symbol("name"), name)
        validate_property(IoK8sApiAutoscalingV2beta1ContainerResourceMetricSource, Symbol("targetAverageUtilization"), targetAverageUtilization)
        setfield!(o, Symbol("targetAverageUtilization"), targetAverageUtilization)
        validate_property(IoK8sApiAutoscalingV2beta1ContainerResourceMetricSource, Symbol("targetAverageValue"), targetAverageValue)
        setfield!(o, Symbol("targetAverageValue"), targetAverageValue)
        o
    end
end # type IoK8sApiAutoscalingV2beta1ContainerResourceMetricSource

const _property_map_IoK8sApiAutoscalingV2beta1ContainerResourceMetricSource = Dict{Symbol,Symbol}(Symbol("container")=>Symbol("container"), Symbol("name")=>Symbol("name"), Symbol("targetAverageUtilization")=>Symbol("targetAverageUtilization"), Symbol("targetAverageValue")=>Symbol("targetAverageValue"))
const _property_types_IoK8sApiAutoscalingV2beta1ContainerResourceMetricSource = Dict{Symbol,String}(Symbol("container")=>"String", Symbol("name")=>"String", Symbol("targetAverageUtilization")=>"Int32", Symbol("targetAverageValue")=>"IoK8sApimachineryPkgApiResourceQuantity")
Base.propertynames(::Type{ IoK8sApiAutoscalingV2beta1ContainerResourceMetricSource }) = collect(keys(_property_map_IoK8sApiAutoscalingV2beta1ContainerResourceMetricSource))
Swagger.property_type(::Type{ IoK8sApiAutoscalingV2beta1ContainerResourceMetricSource }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiAutoscalingV2beta1ContainerResourceMetricSource[name]))}
Swagger.field_name(::Type{ IoK8sApiAutoscalingV2beta1ContainerResourceMetricSource }, property_name::Symbol) =  _property_map_IoK8sApiAutoscalingV2beta1ContainerResourceMetricSource[property_name]

function check_required(o::IoK8sApiAutoscalingV2beta1ContainerResourceMetricSource)
    (getproperty(o, Symbol("container")) === nothing) && (return false)
    (getproperty(o, Symbol("name")) === nothing) && (return false)
    true
end

function validate_property(::Type{ IoK8sApiAutoscalingV2beta1ContainerResourceMetricSource }, name::Symbol, val)
end
