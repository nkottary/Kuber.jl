# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


@doc raw"""PersistentVolumeClaimTemplate is used to produce PersistentVolumeClaim objects as part of an EphemeralVolumeSource.

    IoK8sApiCoreV1PersistentVolumeClaimTemplate(;
        metadata=nothing,
        spec=nothing,
    )

    - metadata::IoK8sApimachineryPkgApisMetaV1ObjectMeta : May contain labels and annotations that will be copied into the PVC when creating it. No other fields are allowed and will be rejected during validation.
    - spec::IoK8sApiCoreV1PersistentVolumeClaimSpec : The specification for the PersistentVolumeClaim. The entire content is copied unchanged into the PVC that gets created from this template. The same fields as in a PersistentVolumeClaim are also valid here.
"""
mutable struct IoK8sApiCoreV1PersistentVolumeClaimTemplate <: SwaggerModel
    metadata::Any # spec type: Union{ Nothing, IoK8sApimachineryPkgApisMetaV1ObjectMeta } # spec name: metadata
    spec::Any # spec type: Union{ Nothing, IoK8sApiCoreV1PersistentVolumeClaimSpec } # spec name: spec

    function IoK8sApiCoreV1PersistentVolumeClaimTemplate(;metadata=nothing, spec=nothing)
        o = new()
        validate_property(IoK8sApiCoreV1PersistentVolumeClaimTemplate, Symbol("metadata"), metadata)
        setfield!(o, Symbol("metadata"), metadata)
        validate_property(IoK8sApiCoreV1PersistentVolumeClaimTemplate, Symbol("spec"), spec)
        setfield!(o, Symbol("spec"), spec)
        o
    end
end # type IoK8sApiCoreV1PersistentVolumeClaimTemplate

const _property_map_IoK8sApiCoreV1PersistentVolumeClaimTemplate = Dict{Symbol,Symbol}(Symbol("metadata")=>Symbol("metadata"), Symbol("spec")=>Symbol("spec"))
const _property_types_IoK8sApiCoreV1PersistentVolumeClaimTemplate = Dict{Symbol,String}(Symbol("metadata")=>"IoK8sApimachineryPkgApisMetaV1ObjectMeta", Symbol("spec")=>"IoK8sApiCoreV1PersistentVolumeClaimSpec")
Base.propertynames(::Type{ IoK8sApiCoreV1PersistentVolumeClaimTemplate }) = collect(keys(_property_map_IoK8sApiCoreV1PersistentVolumeClaimTemplate))
Swagger.property_type(::Type{ IoK8sApiCoreV1PersistentVolumeClaimTemplate }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiCoreV1PersistentVolumeClaimTemplate[name]))}
Swagger.field_name(::Type{ IoK8sApiCoreV1PersistentVolumeClaimTemplate }, property_name::Symbol) =  _property_map_IoK8sApiCoreV1PersistentVolumeClaimTemplate[property_name]

function check_required(o::IoK8sApiCoreV1PersistentVolumeClaimTemplate)
    (getproperty(o, Symbol("spec")) === nothing) && (return false)
    true
end

function validate_property(::Type{ IoK8sApiCoreV1PersistentVolumeClaimTemplate }, name::Symbol, val)
end
