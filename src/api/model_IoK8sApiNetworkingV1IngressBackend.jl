# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


@doc raw"""IngressBackend describes all endpoints for a given service and port.

    IoK8sApiNetworkingV1IngressBackend(;
        resource=nothing,
        service=nothing,
    )

    - resource::IoK8sApiCoreV1TypedLocalObjectReference : Resource is an ObjectRef to another Kubernetes resource in the namespace of the Ingress object. If resource is specified, a service.Name and service.Port must not be specified. This is a mutually exclusive setting with \&quot;Service\&quot;.
    - service::IoK8sApiNetworkingV1IngressServiceBackend : Service references a Service as a Backend. This is a mutually exclusive setting with \&quot;Resource\&quot;.
"""
mutable struct IoK8sApiNetworkingV1IngressBackend <: SwaggerModel
    resource::Any # spec type: Union{ Nothing, IoK8sApiCoreV1TypedLocalObjectReference } # spec name: resource
    service::Any # spec type: Union{ Nothing, IoK8sApiNetworkingV1IngressServiceBackend } # spec name: service

    function IoK8sApiNetworkingV1IngressBackend(;resource=nothing, service=nothing)
        o = new()
        validate_property(IoK8sApiNetworkingV1IngressBackend, Symbol("resource"), resource)
        setfield!(o, Symbol("resource"), resource)
        validate_property(IoK8sApiNetworkingV1IngressBackend, Symbol("service"), service)
        setfield!(o, Symbol("service"), service)
        o
    end
end # type IoK8sApiNetworkingV1IngressBackend

const _property_map_IoK8sApiNetworkingV1IngressBackend = Dict{Symbol,Symbol}(Symbol("resource")=>Symbol("resource"), Symbol("service")=>Symbol("service"))
const _property_types_IoK8sApiNetworkingV1IngressBackend = Dict{Symbol,String}(Symbol("resource")=>"IoK8sApiCoreV1TypedLocalObjectReference", Symbol("service")=>"IoK8sApiNetworkingV1IngressServiceBackend")
Base.propertynames(::Type{ IoK8sApiNetworkingV1IngressBackend }) = collect(keys(_property_map_IoK8sApiNetworkingV1IngressBackend))
Swagger.property_type(::Type{ IoK8sApiNetworkingV1IngressBackend }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiNetworkingV1IngressBackend[name]))}
Swagger.field_name(::Type{ IoK8sApiNetworkingV1IngressBackend }, property_name::Symbol) =  _property_map_IoK8sApiNetworkingV1IngressBackend[property_name]

function check_required(o::IoK8sApiNetworkingV1IngressBackend)
    true
end

function validate_property(::Type{ IoK8sApiNetworkingV1IngressBackend }, name::Symbol, val)
end
