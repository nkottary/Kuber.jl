# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


@doc raw"""SeccompProfile defines a pod/container&#39;s seccomp profile settings. Only one profile source may be set.

    IoK8sApiCoreV1SeccompProfile(;
        localhostProfile=nothing,
        type=nothing,
    )

    - localhostProfile::String : localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet&#39;s configured seccomp profile location. Must only be set if type is \&quot;Localhost\&quot;.
    - type::String : type indicates which kind of seccomp profile will be applied. Valid options are:  Localhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.
"""
mutable struct IoK8sApiCoreV1SeccompProfile <: SwaggerModel
    localhostProfile::Any # spec type: Union{ Nothing, String } # spec name: localhostProfile
    type::Any # spec type: Union{ Nothing, String } # spec name: type

    function IoK8sApiCoreV1SeccompProfile(;localhostProfile=nothing, type=nothing)
        o = new()
        validate_property(IoK8sApiCoreV1SeccompProfile, Symbol("localhostProfile"), localhostProfile)
        setfield!(o, Symbol("localhostProfile"), localhostProfile)
        validate_property(IoK8sApiCoreV1SeccompProfile, Symbol("type"), type)
        setfield!(o, Symbol("type"), type)
        o
    end
end # type IoK8sApiCoreV1SeccompProfile

const _property_map_IoK8sApiCoreV1SeccompProfile = Dict{Symbol,Symbol}(Symbol("localhostProfile")=>Symbol("localhostProfile"), Symbol("type")=>Symbol("type"))
const _property_types_IoK8sApiCoreV1SeccompProfile = Dict{Symbol,String}(Symbol("localhostProfile")=>"String", Symbol("type")=>"String")
Base.propertynames(::Type{ IoK8sApiCoreV1SeccompProfile }) = collect(keys(_property_map_IoK8sApiCoreV1SeccompProfile))
Swagger.property_type(::Type{ IoK8sApiCoreV1SeccompProfile }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiCoreV1SeccompProfile[name]))}
Swagger.field_name(::Type{ IoK8sApiCoreV1SeccompProfile }, property_name::Symbol) =  _property_map_IoK8sApiCoreV1SeccompProfile[property_name]

function check_required(o::IoK8sApiCoreV1SeccompProfile)
    (getproperty(o, Symbol("type")) === nothing) && (return false)
    true
end

function validate_property(::Type{ IoK8sApiCoreV1SeccompProfile }, name::Symbol, val)
end
