# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.

struct CrdProjectcalicoOrgV1Api <: SwaggerApi
    client::Swagger.Client
end

function _swaggerinternal_createCrdProjectcalicoOrgV1BGPConfiguration(_api::CrdProjectcalicoOrgV1Api, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "POST", OrgProjectcalicoCrdV1BGPConfiguration, "/apis/crd.projectcalico.org/v1/bgpconfigurations", ["BearerToken"], body)
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "fieldManager", fieldManager)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

create a BGPConfiguration
Param: body::OrgProjectcalicoCrdV1BGPConfiguration (required)
Param: pretty::String
Param: dryRun::String
Param: fieldManager::String
Return: OrgProjectcalicoCrdV1BGPConfiguration
"""
function createCrdProjectcalicoOrgV1BGPConfiguration(_api::CrdProjectcalicoOrgV1Api, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_createCrdProjectcalicoOrgV1BGPConfiguration(_api, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function createCrdProjectcalicoOrgV1BGPConfiguration(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_createCrdProjectcalicoOrgV1BGPConfiguration(_api, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_createCrdProjectcalicoOrgV1BGPPeer(_api::CrdProjectcalicoOrgV1Api, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "POST", OrgProjectcalicoCrdV1BGPPeer, "/apis/crd.projectcalico.org/v1/bgppeers", ["BearerToken"], body)
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "fieldManager", fieldManager)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

create a BGPPeer
Param: body::OrgProjectcalicoCrdV1BGPPeer (required)
Param: pretty::String
Param: dryRun::String
Param: fieldManager::String
Return: OrgProjectcalicoCrdV1BGPPeer
"""
function createCrdProjectcalicoOrgV1BGPPeer(_api::CrdProjectcalicoOrgV1Api, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_createCrdProjectcalicoOrgV1BGPPeer(_api, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function createCrdProjectcalicoOrgV1BGPPeer(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_createCrdProjectcalicoOrgV1BGPPeer(_api, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_createCrdProjectcalicoOrgV1BlockAffinity(_api::CrdProjectcalicoOrgV1Api, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "POST", OrgProjectcalicoCrdV1BlockAffinity, "/apis/crd.projectcalico.org/v1/blockaffinities", ["BearerToken"], body)
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "fieldManager", fieldManager)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

create a BlockAffinity
Param: body::OrgProjectcalicoCrdV1BlockAffinity (required)
Param: pretty::String
Param: dryRun::String
Param: fieldManager::String
Return: OrgProjectcalicoCrdV1BlockAffinity
"""
function createCrdProjectcalicoOrgV1BlockAffinity(_api::CrdProjectcalicoOrgV1Api, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_createCrdProjectcalicoOrgV1BlockAffinity(_api, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function createCrdProjectcalicoOrgV1BlockAffinity(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_createCrdProjectcalicoOrgV1BlockAffinity(_api, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_createCrdProjectcalicoOrgV1ClusterInformation(_api::CrdProjectcalicoOrgV1Api, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "POST", OrgProjectcalicoCrdV1ClusterInformation, "/apis/crd.projectcalico.org/v1/clusterinformations", ["BearerToken"], body)
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "fieldManager", fieldManager)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

create a ClusterInformation
Param: body::OrgProjectcalicoCrdV1ClusterInformation (required)
Param: pretty::String
Param: dryRun::String
Param: fieldManager::String
Return: OrgProjectcalicoCrdV1ClusterInformation
"""
function createCrdProjectcalicoOrgV1ClusterInformation(_api::CrdProjectcalicoOrgV1Api, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_createCrdProjectcalicoOrgV1ClusterInformation(_api, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function createCrdProjectcalicoOrgV1ClusterInformation(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_createCrdProjectcalicoOrgV1ClusterInformation(_api, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_createCrdProjectcalicoOrgV1FelixConfiguration(_api::CrdProjectcalicoOrgV1Api, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "POST", OrgProjectcalicoCrdV1FelixConfiguration, "/apis/crd.projectcalico.org/v1/felixconfigurations", ["BearerToken"], body)
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "fieldManager", fieldManager)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

create a FelixConfiguration
Param: body::OrgProjectcalicoCrdV1FelixConfiguration (required)
Param: pretty::String
Param: dryRun::String
Param: fieldManager::String
Return: OrgProjectcalicoCrdV1FelixConfiguration
"""
function createCrdProjectcalicoOrgV1FelixConfiguration(_api::CrdProjectcalicoOrgV1Api, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_createCrdProjectcalicoOrgV1FelixConfiguration(_api, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function createCrdProjectcalicoOrgV1FelixConfiguration(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_createCrdProjectcalicoOrgV1FelixConfiguration(_api, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_createCrdProjectcalicoOrgV1GlobalNetworkPolicy(_api::CrdProjectcalicoOrgV1Api, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "POST", OrgProjectcalicoCrdV1GlobalNetworkPolicy, "/apis/crd.projectcalico.org/v1/globalnetworkpolicies", ["BearerToken"], body)
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "fieldManager", fieldManager)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

create a GlobalNetworkPolicy
Param: body::OrgProjectcalicoCrdV1GlobalNetworkPolicy (required)
Param: pretty::String
Param: dryRun::String
Param: fieldManager::String
Return: OrgProjectcalicoCrdV1GlobalNetworkPolicy
"""
function createCrdProjectcalicoOrgV1GlobalNetworkPolicy(_api::CrdProjectcalicoOrgV1Api, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_createCrdProjectcalicoOrgV1GlobalNetworkPolicy(_api, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function createCrdProjectcalicoOrgV1GlobalNetworkPolicy(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_createCrdProjectcalicoOrgV1GlobalNetworkPolicy(_api, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_createCrdProjectcalicoOrgV1GlobalNetworkSet(_api::CrdProjectcalicoOrgV1Api, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "POST", OrgProjectcalicoCrdV1GlobalNetworkSet, "/apis/crd.projectcalico.org/v1/globalnetworksets", ["BearerToken"], body)
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "fieldManager", fieldManager)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

create a GlobalNetworkSet
Param: body::OrgProjectcalicoCrdV1GlobalNetworkSet (required)
Param: pretty::String
Param: dryRun::String
Param: fieldManager::String
Return: OrgProjectcalicoCrdV1GlobalNetworkSet
"""
function createCrdProjectcalicoOrgV1GlobalNetworkSet(_api::CrdProjectcalicoOrgV1Api, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_createCrdProjectcalicoOrgV1GlobalNetworkSet(_api, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function createCrdProjectcalicoOrgV1GlobalNetworkSet(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_createCrdProjectcalicoOrgV1GlobalNetworkSet(_api, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_createCrdProjectcalicoOrgV1HostEndpoint(_api::CrdProjectcalicoOrgV1Api, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "POST", OrgProjectcalicoCrdV1HostEndpoint, "/apis/crd.projectcalico.org/v1/hostendpoints", ["BearerToken"], body)
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "fieldManager", fieldManager)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

create a HostEndpoint
Param: body::OrgProjectcalicoCrdV1HostEndpoint (required)
Param: pretty::String
Param: dryRun::String
Param: fieldManager::String
Return: OrgProjectcalicoCrdV1HostEndpoint
"""
function createCrdProjectcalicoOrgV1HostEndpoint(_api::CrdProjectcalicoOrgV1Api, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_createCrdProjectcalicoOrgV1HostEndpoint(_api, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function createCrdProjectcalicoOrgV1HostEndpoint(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_createCrdProjectcalicoOrgV1HostEndpoint(_api, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_createCrdProjectcalicoOrgV1IPAMBlock(_api::CrdProjectcalicoOrgV1Api, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "POST", OrgProjectcalicoCrdV1IPAMBlock, "/apis/crd.projectcalico.org/v1/ipamblocks", ["BearerToken"], body)
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "fieldManager", fieldManager)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

create an IPAMBlock
Param: body::OrgProjectcalicoCrdV1IPAMBlock (required)
Param: pretty::String
Param: dryRun::String
Param: fieldManager::String
Return: OrgProjectcalicoCrdV1IPAMBlock
"""
function createCrdProjectcalicoOrgV1IPAMBlock(_api::CrdProjectcalicoOrgV1Api, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_createCrdProjectcalicoOrgV1IPAMBlock(_api, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function createCrdProjectcalicoOrgV1IPAMBlock(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_createCrdProjectcalicoOrgV1IPAMBlock(_api, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_createCrdProjectcalicoOrgV1IPPool(_api::CrdProjectcalicoOrgV1Api, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "POST", OrgProjectcalicoCrdV1IPPool, "/apis/crd.projectcalico.org/v1/ippools", ["BearerToken"], body)
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "fieldManager", fieldManager)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

create an IPPool
Param: body::OrgProjectcalicoCrdV1IPPool (required)
Param: pretty::String
Param: dryRun::String
Param: fieldManager::String
Return: OrgProjectcalicoCrdV1IPPool
"""
function createCrdProjectcalicoOrgV1IPPool(_api::CrdProjectcalicoOrgV1Api, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_createCrdProjectcalicoOrgV1IPPool(_api, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function createCrdProjectcalicoOrgV1IPPool(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_createCrdProjectcalicoOrgV1IPPool(_api, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_createCrdProjectcalicoOrgV1NamespacedNetworkPolicy(_api::CrdProjectcalicoOrgV1Api, namespace::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "POST", OrgProjectcalicoCrdV1NetworkPolicy, "/apis/crd.projectcalico.org/v1/namespaces/{namespace}/networkpolicies", ["BearerToken"], body)
    Swagger.set_param(_ctx.path, "namespace", namespace)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "fieldManager", fieldManager)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

create a NetworkPolicy
Param: namespace::String (required)
Param: body::OrgProjectcalicoCrdV1NetworkPolicy (required)
Param: pretty::String
Param: dryRun::String
Param: fieldManager::String
Return: OrgProjectcalicoCrdV1NetworkPolicy
"""
function createCrdProjectcalicoOrgV1NamespacedNetworkPolicy(_api::CrdProjectcalicoOrgV1Api, namespace::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_createCrdProjectcalicoOrgV1NamespacedNetworkPolicy(_api, namespace, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function createCrdProjectcalicoOrgV1NamespacedNetworkPolicy(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, namespace::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_createCrdProjectcalicoOrgV1NamespacedNetworkPolicy(_api, namespace, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_createCrdProjectcalicoOrgV1NamespacedNetworkSet(_api::CrdProjectcalicoOrgV1Api, namespace::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "POST", OrgProjectcalicoCrdV1NetworkSet, "/apis/crd.projectcalico.org/v1/namespaces/{namespace}/networksets", ["BearerToken"], body)
    Swagger.set_param(_ctx.path, "namespace", namespace)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "fieldManager", fieldManager)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

create a NetworkSet
Param: namespace::String (required)
Param: body::OrgProjectcalicoCrdV1NetworkSet (required)
Param: pretty::String
Param: dryRun::String
Param: fieldManager::String
Return: OrgProjectcalicoCrdV1NetworkSet
"""
function createCrdProjectcalicoOrgV1NamespacedNetworkSet(_api::CrdProjectcalicoOrgV1Api, namespace::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_createCrdProjectcalicoOrgV1NamespacedNetworkSet(_api, namespace, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function createCrdProjectcalicoOrgV1NamespacedNetworkSet(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, namespace::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_createCrdProjectcalicoOrgV1NamespacedNetworkSet(_api, namespace, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_deleteCrdProjectcalicoOrgV1BGPConfiguration(_api::CrdProjectcalicoOrgV1Api, name::String; pretty=nothing, body=nothing, dryRun=nothing, gracePeriodSeconds=nothing, orphanDependents=nothing, propagationPolicy=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "DELETE", IoK8sApimachineryPkgApisMetaV1StatusV2, "/apis/crd.projectcalico.org/v1/bgpconfigurations/{name}", ["BearerToken"], body)
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "gracePeriodSeconds", gracePeriodSeconds)  # type Int32
    Swagger.set_param(_ctx.query, "orphanDependents", orphanDependents)  # type Bool
    Swagger.set_param(_ctx.query, "propagationPolicy", propagationPolicy)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

delete a BGPConfiguration
Param: name::String (required)
Param: pretty::String
Param: body::IoK8sApimachineryPkgApisMetaV1DeleteOptionsV2
Param: dryRun::String
Param: gracePeriodSeconds::Int32
Param: orphanDependents::Bool
Param: propagationPolicy::String
Return: IoK8sApimachineryPkgApisMetaV1StatusV2
"""
function deleteCrdProjectcalicoOrgV1BGPConfiguration(_api::CrdProjectcalicoOrgV1Api, name::String; pretty=nothing, body=nothing, dryRun=nothing, gracePeriodSeconds=nothing, orphanDependents=nothing, propagationPolicy=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1BGPConfiguration(_api, name; pretty=pretty, body=body, dryRun=dryRun, gracePeriodSeconds=gracePeriodSeconds, orphanDependents=orphanDependents, propagationPolicy=propagationPolicy, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function deleteCrdProjectcalicoOrgV1BGPConfiguration(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String; pretty=nothing, body=nothing, dryRun=nothing, gracePeriodSeconds=nothing, orphanDependents=nothing, propagationPolicy=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1BGPConfiguration(_api, name; pretty=pretty, body=body, dryRun=dryRun, gracePeriodSeconds=gracePeriodSeconds, orphanDependents=orphanDependents, propagationPolicy=propagationPolicy, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_deleteCrdProjectcalicoOrgV1BGPPeer(_api::CrdProjectcalicoOrgV1Api, name::String; pretty=nothing, body=nothing, dryRun=nothing, gracePeriodSeconds=nothing, orphanDependents=nothing, propagationPolicy=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "DELETE", IoK8sApimachineryPkgApisMetaV1StatusV2, "/apis/crd.projectcalico.org/v1/bgppeers/{name}", ["BearerToken"], body)
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "gracePeriodSeconds", gracePeriodSeconds)  # type Int32
    Swagger.set_param(_ctx.query, "orphanDependents", orphanDependents)  # type Bool
    Swagger.set_param(_ctx.query, "propagationPolicy", propagationPolicy)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

delete a BGPPeer
Param: name::String (required)
Param: pretty::String
Param: body::IoK8sApimachineryPkgApisMetaV1DeleteOptionsV2
Param: dryRun::String
Param: gracePeriodSeconds::Int32
Param: orphanDependents::Bool
Param: propagationPolicy::String
Return: IoK8sApimachineryPkgApisMetaV1StatusV2
"""
function deleteCrdProjectcalicoOrgV1BGPPeer(_api::CrdProjectcalicoOrgV1Api, name::String; pretty=nothing, body=nothing, dryRun=nothing, gracePeriodSeconds=nothing, orphanDependents=nothing, propagationPolicy=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1BGPPeer(_api, name; pretty=pretty, body=body, dryRun=dryRun, gracePeriodSeconds=gracePeriodSeconds, orphanDependents=orphanDependents, propagationPolicy=propagationPolicy, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function deleteCrdProjectcalicoOrgV1BGPPeer(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String; pretty=nothing, body=nothing, dryRun=nothing, gracePeriodSeconds=nothing, orphanDependents=nothing, propagationPolicy=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1BGPPeer(_api, name; pretty=pretty, body=body, dryRun=dryRun, gracePeriodSeconds=gracePeriodSeconds, orphanDependents=orphanDependents, propagationPolicy=propagationPolicy, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_deleteCrdProjectcalicoOrgV1BlockAffinity(_api::CrdProjectcalicoOrgV1Api, name::String; pretty=nothing, body=nothing, dryRun=nothing, gracePeriodSeconds=nothing, orphanDependents=nothing, propagationPolicy=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "DELETE", IoK8sApimachineryPkgApisMetaV1StatusV2, "/apis/crd.projectcalico.org/v1/blockaffinities/{name}", ["BearerToken"], body)
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "gracePeriodSeconds", gracePeriodSeconds)  # type Int32
    Swagger.set_param(_ctx.query, "orphanDependents", orphanDependents)  # type Bool
    Swagger.set_param(_ctx.query, "propagationPolicy", propagationPolicy)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

delete a BlockAffinity
Param: name::String (required)
Param: pretty::String
Param: body::IoK8sApimachineryPkgApisMetaV1DeleteOptionsV2
Param: dryRun::String
Param: gracePeriodSeconds::Int32
Param: orphanDependents::Bool
Param: propagationPolicy::String
Return: IoK8sApimachineryPkgApisMetaV1StatusV2
"""
function deleteCrdProjectcalicoOrgV1BlockAffinity(_api::CrdProjectcalicoOrgV1Api, name::String; pretty=nothing, body=nothing, dryRun=nothing, gracePeriodSeconds=nothing, orphanDependents=nothing, propagationPolicy=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1BlockAffinity(_api, name; pretty=pretty, body=body, dryRun=dryRun, gracePeriodSeconds=gracePeriodSeconds, orphanDependents=orphanDependents, propagationPolicy=propagationPolicy, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function deleteCrdProjectcalicoOrgV1BlockAffinity(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String; pretty=nothing, body=nothing, dryRun=nothing, gracePeriodSeconds=nothing, orphanDependents=nothing, propagationPolicy=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1BlockAffinity(_api, name; pretty=pretty, body=body, dryRun=dryRun, gracePeriodSeconds=gracePeriodSeconds, orphanDependents=orphanDependents, propagationPolicy=propagationPolicy, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_deleteCrdProjectcalicoOrgV1ClusterInformation(_api::CrdProjectcalicoOrgV1Api, name::String; pretty=nothing, body=nothing, dryRun=nothing, gracePeriodSeconds=nothing, orphanDependents=nothing, propagationPolicy=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "DELETE", IoK8sApimachineryPkgApisMetaV1StatusV2, "/apis/crd.projectcalico.org/v1/clusterinformations/{name}", ["BearerToken"], body)
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "gracePeriodSeconds", gracePeriodSeconds)  # type Int32
    Swagger.set_param(_ctx.query, "orphanDependents", orphanDependents)  # type Bool
    Swagger.set_param(_ctx.query, "propagationPolicy", propagationPolicy)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

delete a ClusterInformation
Param: name::String (required)
Param: pretty::String
Param: body::IoK8sApimachineryPkgApisMetaV1DeleteOptionsV2
Param: dryRun::String
Param: gracePeriodSeconds::Int32
Param: orphanDependents::Bool
Param: propagationPolicy::String
Return: IoK8sApimachineryPkgApisMetaV1StatusV2
"""
function deleteCrdProjectcalicoOrgV1ClusterInformation(_api::CrdProjectcalicoOrgV1Api, name::String; pretty=nothing, body=nothing, dryRun=nothing, gracePeriodSeconds=nothing, orphanDependents=nothing, propagationPolicy=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1ClusterInformation(_api, name; pretty=pretty, body=body, dryRun=dryRun, gracePeriodSeconds=gracePeriodSeconds, orphanDependents=orphanDependents, propagationPolicy=propagationPolicy, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function deleteCrdProjectcalicoOrgV1ClusterInformation(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String; pretty=nothing, body=nothing, dryRun=nothing, gracePeriodSeconds=nothing, orphanDependents=nothing, propagationPolicy=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1ClusterInformation(_api, name; pretty=pretty, body=body, dryRun=dryRun, gracePeriodSeconds=gracePeriodSeconds, orphanDependents=orphanDependents, propagationPolicy=propagationPolicy, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_deleteCrdProjectcalicoOrgV1CollectionBGPConfiguration(_api::CrdProjectcalicoOrgV1Api; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "DELETE", IoK8sApimachineryPkgApisMetaV1StatusV2, "/apis/crd.projectcalico.org/v1/bgpconfigurations", ["BearerToken"])
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "allowWatchBookmarks", allowWatchBookmarks)  # type Bool
    Swagger.set_param(_ctx.query, "continue", __continue__)  # type String
    Swagger.set_param(_ctx.query, "fieldSelector", fieldSelector)  # type String
    Swagger.set_param(_ctx.query, "labelSelector", labelSelector)  # type String
    Swagger.set_param(_ctx.query, "limit", limit)  # type Int32
    Swagger.set_param(_ctx.query, "resourceVersion", resourceVersion)  # type String
    Swagger.set_param(_ctx.query, "resourceVersionMatch", resourceVersionMatch)  # type String
    Swagger.set_param(_ctx.query, "timeoutSeconds", timeoutSeconds)  # type Int32
    Swagger.set_param(_ctx.query, "watch", watch)  # type Bool
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

delete collection of BGPConfiguration
Param: pretty::String
Param: allowWatchBookmarks::Bool
Param: __continue__::String
Param: fieldSelector::String
Param: labelSelector::String
Param: limit::Int32
Param: resourceVersion::String
Param: resourceVersionMatch::String
Param: timeoutSeconds::Int32
Param: watch::Bool
Return: IoK8sApimachineryPkgApisMetaV1StatusV2
"""
function deleteCrdProjectcalicoOrgV1CollectionBGPConfiguration(_api::CrdProjectcalicoOrgV1Api; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1CollectionBGPConfiguration(_api; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function deleteCrdProjectcalicoOrgV1CollectionBGPConfiguration(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1CollectionBGPConfiguration(_api; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_deleteCrdProjectcalicoOrgV1CollectionBGPPeer(_api::CrdProjectcalicoOrgV1Api; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "DELETE", IoK8sApimachineryPkgApisMetaV1StatusV2, "/apis/crd.projectcalico.org/v1/bgppeers", ["BearerToken"])
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "allowWatchBookmarks", allowWatchBookmarks)  # type Bool
    Swagger.set_param(_ctx.query, "continue", __continue__)  # type String
    Swagger.set_param(_ctx.query, "fieldSelector", fieldSelector)  # type String
    Swagger.set_param(_ctx.query, "labelSelector", labelSelector)  # type String
    Swagger.set_param(_ctx.query, "limit", limit)  # type Int32
    Swagger.set_param(_ctx.query, "resourceVersion", resourceVersion)  # type String
    Swagger.set_param(_ctx.query, "resourceVersionMatch", resourceVersionMatch)  # type String
    Swagger.set_param(_ctx.query, "timeoutSeconds", timeoutSeconds)  # type Int32
    Swagger.set_param(_ctx.query, "watch", watch)  # type Bool
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

delete collection of BGPPeer
Param: pretty::String
Param: allowWatchBookmarks::Bool
Param: __continue__::String
Param: fieldSelector::String
Param: labelSelector::String
Param: limit::Int32
Param: resourceVersion::String
Param: resourceVersionMatch::String
Param: timeoutSeconds::Int32
Param: watch::Bool
Return: IoK8sApimachineryPkgApisMetaV1StatusV2
"""
function deleteCrdProjectcalicoOrgV1CollectionBGPPeer(_api::CrdProjectcalicoOrgV1Api; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1CollectionBGPPeer(_api; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function deleteCrdProjectcalicoOrgV1CollectionBGPPeer(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1CollectionBGPPeer(_api; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_deleteCrdProjectcalicoOrgV1CollectionBlockAffinity(_api::CrdProjectcalicoOrgV1Api; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "DELETE", IoK8sApimachineryPkgApisMetaV1StatusV2, "/apis/crd.projectcalico.org/v1/blockaffinities", ["BearerToken"])
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "allowWatchBookmarks", allowWatchBookmarks)  # type Bool
    Swagger.set_param(_ctx.query, "continue", __continue__)  # type String
    Swagger.set_param(_ctx.query, "fieldSelector", fieldSelector)  # type String
    Swagger.set_param(_ctx.query, "labelSelector", labelSelector)  # type String
    Swagger.set_param(_ctx.query, "limit", limit)  # type Int32
    Swagger.set_param(_ctx.query, "resourceVersion", resourceVersion)  # type String
    Swagger.set_param(_ctx.query, "resourceVersionMatch", resourceVersionMatch)  # type String
    Swagger.set_param(_ctx.query, "timeoutSeconds", timeoutSeconds)  # type Int32
    Swagger.set_param(_ctx.query, "watch", watch)  # type Bool
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

delete collection of BlockAffinity
Param: pretty::String
Param: allowWatchBookmarks::Bool
Param: __continue__::String
Param: fieldSelector::String
Param: labelSelector::String
Param: limit::Int32
Param: resourceVersion::String
Param: resourceVersionMatch::String
Param: timeoutSeconds::Int32
Param: watch::Bool
Return: IoK8sApimachineryPkgApisMetaV1StatusV2
"""
function deleteCrdProjectcalicoOrgV1CollectionBlockAffinity(_api::CrdProjectcalicoOrgV1Api; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1CollectionBlockAffinity(_api; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function deleteCrdProjectcalicoOrgV1CollectionBlockAffinity(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1CollectionBlockAffinity(_api; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_deleteCrdProjectcalicoOrgV1CollectionClusterInformation(_api::CrdProjectcalicoOrgV1Api; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "DELETE", IoK8sApimachineryPkgApisMetaV1StatusV2, "/apis/crd.projectcalico.org/v1/clusterinformations", ["BearerToken"])
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "allowWatchBookmarks", allowWatchBookmarks)  # type Bool
    Swagger.set_param(_ctx.query, "continue", __continue__)  # type String
    Swagger.set_param(_ctx.query, "fieldSelector", fieldSelector)  # type String
    Swagger.set_param(_ctx.query, "labelSelector", labelSelector)  # type String
    Swagger.set_param(_ctx.query, "limit", limit)  # type Int32
    Swagger.set_param(_ctx.query, "resourceVersion", resourceVersion)  # type String
    Swagger.set_param(_ctx.query, "resourceVersionMatch", resourceVersionMatch)  # type String
    Swagger.set_param(_ctx.query, "timeoutSeconds", timeoutSeconds)  # type Int32
    Swagger.set_param(_ctx.query, "watch", watch)  # type Bool
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

delete collection of ClusterInformation
Param: pretty::String
Param: allowWatchBookmarks::Bool
Param: __continue__::String
Param: fieldSelector::String
Param: labelSelector::String
Param: limit::Int32
Param: resourceVersion::String
Param: resourceVersionMatch::String
Param: timeoutSeconds::Int32
Param: watch::Bool
Return: IoK8sApimachineryPkgApisMetaV1StatusV2
"""
function deleteCrdProjectcalicoOrgV1CollectionClusterInformation(_api::CrdProjectcalicoOrgV1Api; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1CollectionClusterInformation(_api; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function deleteCrdProjectcalicoOrgV1CollectionClusterInformation(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1CollectionClusterInformation(_api; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_deleteCrdProjectcalicoOrgV1CollectionFelixConfiguration(_api::CrdProjectcalicoOrgV1Api; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "DELETE", IoK8sApimachineryPkgApisMetaV1StatusV2, "/apis/crd.projectcalico.org/v1/felixconfigurations", ["BearerToken"])
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "allowWatchBookmarks", allowWatchBookmarks)  # type Bool
    Swagger.set_param(_ctx.query, "continue", __continue__)  # type String
    Swagger.set_param(_ctx.query, "fieldSelector", fieldSelector)  # type String
    Swagger.set_param(_ctx.query, "labelSelector", labelSelector)  # type String
    Swagger.set_param(_ctx.query, "limit", limit)  # type Int32
    Swagger.set_param(_ctx.query, "resourceVersion", resourceVersion)  # type String
    Swagger.set_param(_ctx.query, "resourceVersionMatch", resourceVersionMatch)  # type String
    Swagger.set_param(_ctx.query, "timeoutSeconds", timeoutSeconds)  # type Int32
    Swagger.set_param(_ctx.query, "watch", watch)  # type Bool
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

delete collection of FelixConfiguration
Param: pretty::String
Param: allowWatchBookmarks::Bool
Param: __continue__::String
Param: fieldSelector::String
Param: labelSelector::String
Param: limit::Int32
Param: resourceVersion::String
Param: resourceVersionMatch::String
Param: timeoutSeconds::Int32
Param: watch::Bool
Return: IoK8sApimachineryPkgApisMetaV1StatusV2
"""
function deleteCrdProjectcalicoOrgV1CollectionFelixConfiguration(_api::CrdProjectcalicoOrgV1Api; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1CollectionFelixConfiguration(_api; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function deleteCrdProjectcalicoOrgV1CollectionFelixConfiguration(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1CollectionFelixConfiguration(_api; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_deleteCrdProjectcalicoOrgV1CollectionGlobalNetworkPolicy(_api::CrdProjectcalicoOrgV1Api; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "DELETE", IoK8sApimachineryPkgApisMetaV1StatusV2, "/apis/crd.projectcalico.org/v1/globalnetworkpolicies", ["BearerToken"])
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "allowWatchBookmarks", allowWatchBookmarks)  # type Bool
    Swagger.set_param(_ctx.query, "continue", __continue__)  # type String
    Swagger.set_param(_ctx.query, "fieldSelector", fieldSelector)  # type String
    Swagger.set_param(_ctx.query, "labelSelector", labelSelector)  # type String
    Swagger.set_param(_ctx.query, "limit", limit)  # type Int32
    Swagger.set_param(_ctx.query, "resourceVersion", resourceVersion)  # type String
    Swagger.set_param(_ctx.query, "resourceVersionMatch", resourceVersionMatch)  # type String
    Swagger.set_param(_ctx.query, "timeoutSeconds", timeoutSeconds)  # type Int32
    Swagger.set_param(_ctx.query, "watch", watch)  # type Bool
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

delete collection of GlobalNetworkPolicy
Param: pretty::String
Param: allowWatchBookmarks::Bool
Param: __continue__::String
Param: fieldSelector::String
Param: labelSelector::String
Param: limit::Int32
Param: resourceVersion::String
Param: resourceVersionMatch::String
Param: timeoutSeconds::Int32
Param: watch::Bool
Return: IoK8sApimachineryPkgApisMetaV1StatusV2
"""
function deleteCrdProjectcalicoOrgV1CollectionGlobalNetworkPolicy(_api::CrdProjectcalicoOrgV1Api; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1CollectionGlobalNetworkPolicy(_api; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function deleteCrdProjectcalicoOrgV1CollectionGlobalNetworkPolicy(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1CollectionGlobalNetworkPolicy(_api; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_deleteCrdProjectcalicoOrgV1CollectionGlobalNetworkSet(_api::CrdProjectcalicoOrgV1Api; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "DELETE", IoK8sApimachineryPkgApisMetaV1StatusV2, "/apis/crd.projectcalico.org/v1/globalnetworksets", ["BearerToken"])
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "allowWatchBookmarks", allowWatchBookmarks)  # type Bool
    Swagger.set_param(_ctx.query, "continue", __continue__)  # type String
    Swagger.set_param(_ctx.query, "fieldSelector", fieldSelector)  # type String
    Swagger.set_param(_ctx.query, "labelSelector", labelSelector)  # type String
    Swagger.set_param(_ctx.query, "limit", limit)  # type Int32
    Swagger.set_param(_ctx.query, "resourceVersion", resourceVersion)  # type String
    Swagger.set_param(_ctx.query, "resourceVersionMatch", resourceVersionMatch)  # type String
    Swagger.set_param(_ctx.query, "timeoutSeconds", timeoutSeconds)  # type Int32
    Swagger.set_param(_ctx.query, "watch", watch)  # type Bool
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

delete collection of GlobalNetworkSet
Param: pretty::String
Param: allowWatchBookmarks::Bool
Param: __continue__::String
Param: fieldSelector::String
Param: labelSelector::String
Param: limit::Int32
Param: resourceVersion::String
Param: resourceVersionMatch::String
Param: timeoutSeconds::Int32
Param: watch::Bool
Return: IoK8sApimachineryPkgApisMetaV1StatusV2
"""
function deleteCrdProjectcalicoOrgV1CollectionGlobalNetworkSet(_api::CrdProjectcalicoOrgV1Api; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1CollectionGlobalNetworkSet(_api; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function deleteCrdProjectcalicoOrgV1CollectionGlobalNetworkSet(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1CollectionGlobalNetworkSet(_api; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_deleteCrdProjectcalicoOrgV1CollectionHostEndpoint(_api::CrdProjectcalicoOrgV1Api; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "DELETE", IoK8sApimachineryPkgApisMetaV1StatusV2, "/apis/crd.projectcalico.org/v1/hostendpoints", ["BearerToken"])
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "allowWatchBookmarks", allowWatchBookmarks)  # type Bool
    Swagger.set_param(_ctx.query, "continue", __continue__)  # type String
    Swagger.set_param(_ctx.query, "fieldSelector", fieldSelector)  # type String
    Swagger.set_param(_ctx.query, "labelSelector", labelSelector)  # type String
    Swagger.set_param(_ctx.query, "limit", limit)  # type Int32
    Swagger.set_param(_ctx.query, "resourceVersion", resourceVersion)  # type String
    Swagger.set_param(_ctx.query, "resourceVersionMatch", resourceVersionMatch)  # type String
    Swagger.set_param(_ctx.query, "timeoutSeconds", timeoutSeconds)  # type Int32
    Swagger.set_param(_ctx.query, "watch", watch)  # type Bool
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

delete collection of HostEndpoint
Param: pretty::String
Param: allowWatchBookmarks::Bool
Param: __continue__::String
Param: fieldSelector::String
Param: labelSelector::String
Param: limit::Int32
Param: resourceVersion::String
Param: resourceVersionMatch::String
Param: timeoutSeconds::Int32
Param: watch::Bool
Return: IoK8sApimachineryPkgApisMetaV1StatusV2
"""
function deleteCrdProjectcalicoOrgV1CollectionHostEndpoint(_api::CrdProjectcalicoOrgV1Api; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1CollectionHostEndpoint(_api; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function deleteCrdProjectcalicoOrgV1CollectionHostEndpoint(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1CollectionHostEndpoint(_api; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_deleteCrdProjectcalicoOrgV1CollectionIPAMBlock(_api::CrdProjectcalicoOrgV1Api; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "DELETE", IoK8sApimachineryPkgApisMetaV1StatusV2, "/apis/crd.projectcalico.org/v1/ipamblocks", ["BearerToken"])
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "allowWatchBookmarks", allowWatchBookmarks)  # type Bool
    Swagger.set_param(_ctx.query, "continue", __continue__)  # type String
    Swagger.set_param(_ctx.query, "fieldSelector", fieldSelector)  # type String
    Swagger.set_param(_ctx.query, "labelSelector", labelSelector)  # type String
    Swagger.set_param(_ctx.query, "limit", limit)  # type Int32
    Swagger.set_param(_ctx.query, "resourceVersion", resourceVersion)  # type String
    Swagger.set_param(_ctx.query, "resourceVersionMatch", resourceVersionMatch)  # type String
    Swagger.set_param(_ctx.query, "timeoutSeconds", timeoutSeconds)  # type Int32
    Swagger.set_param(_ctx.query, "watch", watch)  # type Bool
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

delete collection of IPAMBlock
Param: pretty::String
Param: allowWatchBookmarks::Bool
Param: __continue__::String
Param: fieldSelector::String
Param: labelSelector::String
Param: limit::Int32
Param: resourceVersion::String
Param: resourceVersionMatch::String
Param: timeoutSeconds::Int32
Param: watch::Bool
Return: IoK8sApimachineryPkgApisMetaV1StatusV2
"""
function deleteCrdProjectcalicoOrgV1CollectionIPAMBlock(_api::CrdProjectcalicoOrgV1Api; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1CollectionIPAMBlock(_api; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function deleteCrdProjectcalicoOrgV1CollectionIPAMBlock(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1CollectionIPAMBlock(_api; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_deleteCrdProjectcalicoOrgV1CollectionIPPool(_api::CrdProjectcalicoOrgV1Api; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "DELETE", IoK8sApimachineryPkgApisMetaV1StatusV2, "/apis/crd.projectcalico.org/v1/ippools", ["BearerToken"])
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "allowWatchBookmarks", allowWatchBookmarks)  # type Bool
    Swagger.set_param(_ctx.query, "continue", __continue__)  # type String
    Swagger.set_param(_ctx.query, "fieldSelector", fieldSelector)  # type String
    Swagger.set_param(_ctx.query, "labelSelector", labelSelector)  # type String
    Swagger.set_param(_ctx.query, "limit", limit)  # type Int32
    Swagger.set_param(_ctx.query, "resourceVersion", resourceVersion)  # type String
    Swagger.set_param(_ctx.query, "resourceVersionMatch", resourceVersionMatch)  # type String
    Swagger.set_param(_ctx.query, "timeoutSeconds", timeoutSeconds)  # type Int32
    Swagger.set_param(_ctx.query, "watch", watch)  # type Bool
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

delete collection of IPPool
Param: pretty::String
Param: allowWatchBookmarks::Bool
Param: __continue__::String
Param: fieldSelector::String
Param: labelSelector::String
Param: limit::Int32
Param: resourceVersion::String
Param: resourceVersionMatch::String
Param: timeoutSeconds::Int32
Param: watch::Bool
Return: IoK8sApimachineryPkgApisMetaV1StatusV2
"""
function deleteCrdProjectcalicoOrgV1CollectionIPPool(_api::CrdProjectcalicoOrgV1Api; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1CollectionIPPool(_api; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function deleteCrdProjectcalicoOrgV1CollectionIPPool(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1CollectionIPPool(_api; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_deleteCrdProjectcalicoOrgV1CollectionNamespacedNetworkPolicy(_api::CrdProjectcalicoOrgV1Api, namespace::String; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "DELETE", IoK8sApimachineryPkgApisMetaV1StatusV2, "/apis/crd.projectcalico.org/v1/namespaces/{namespace}/networkpolicies", ["BearerToken"])
    Swagger.set_param(_ctx.path, "namespace", namespace)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "allowWatchBookmarks", allowWatchBookmarks)  # type Bool
    Swagger.set_param(_ctx.query, "continue", __continue__)  # type String
    Swagger.set_param(_ctx.query, "fieldSelector", fieldSelector)  # type String
    Swagger.set_param(_ctx.query, "labelSelector", labelSelector)  # type String
    Swagger.set_param(_ctx.query, "limit", limit)  # type Int32
    Swagger.set_param(_ctx.query, "resourceVersion", resourceVersion)  # type String
    Swagger.set_param(_ctx.query, "resourceVersionMatch", resourceVersionMatch)  # type String
    Swagger.set_param(_ctx.query, "timeoutSeconds", timeoutSeconds)  # type Int32
    Swagger.set_param(_ctx.query, "watch", watch)  # type Bool
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

delete collection of NetworkPolicy
Param: namespace::String (required)
Param: pretty::String
Param: allowWatchBookmarks::Bool
Param: __continue__::String
Param: fieldSelector::String
Param: labelSelector::String
Param: limit::Int32
Param: resourceVersion::String
Param: resourceVersionMatch::String
Param: timeoutSeconds::Int32
Param: watch::Bool
Return: IoK8sApimachineryPkgApisMetaV1StatusV2
"""
function deleteCrdProjectcalicoOrgV1CollectionNamespacedNetworkPolicy(_api::CrdProjectcalicoOrgV1Api, namespace::String; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1CollectionNamespacedNetworkPolicy(_api, namespace; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function deleteCrdProjectcalicoOrgV1CollectionNamespacedNetworkPolicy(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, namespace::String; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1CollectionNamespacedNetworkPolicy(_api, namespace; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_deleteCrdProjectcalicoOrgV1CollectionNamespacedNetworkSet(_api::CrdProjectcalicoOrgV1Api, namespace::String; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "DELETE", IoK8sApimachineryPkgApisMetaV1StatusV2, "/apis/crd.projectcalico.org/v1/namespaces/{namespace}/networksets", ["BearerToken"])
    Swagger.set_param(_ctx.path, "namespace", namespace)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "allowWatchBookmarks", allowWatchBookmarks)  # type Bool
    Swagger.set_param(_ctx.query, "continue", __continue__)  # type String
    Swagger.set_param(_ctx.query, "fieldSelector", fieldSelector)  # type String
    Swagger.set_param(_ctx.query, "labelSelector", labelSelector)  # type String
    Swagger.set_param(_ctx.query, "limit", limit)  # type Int32
    Swagger.set_param(_ctx.query, "resourceVersion", resourceVersion)  # type String
    Swagger.set_param(_ctx.query, "resourceVersionMatch", resourceVersionMatch)  # type String
    Swagger.set_param(_ctx.query, "timeoutSeconds", timeoutSeconds)  # type Int32
    Swagger.set_param(_ctx.query, "watch", watch)  # type Bool
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

delete collection of NetworkSet
Param: namespace::String (required)
Param: pretty::String
Param: allowWatchBookmarks::Bool
Param: __continue__::String
Param: fieldSelector::String
Param: labelSelector::String
Param: limit::Int32
Param: resourceVersion::String
Param: resourceVersionMatch::String
Param: timeoutSeconds::Int32
Param: watch::Bool
Return: IoK8sApimachineryPkgApisMetaV1StatusV2
"""
function deleteCrdProjectcalicoOrgV1CollectionNamespacedNetworkSet(_api::CrdProjectcalicoOrgV1Api, namespace::String; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1CollectionNamespacedNetworkSet(_api, namespace; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function deleteCrdProjectcalicoOrgV1CollectionNamespacedNetworkSet(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, namespace::String; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1CollectionNamespacedNetworkSet(_api, namespace; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_deleteCrdProjectcalicoOrgV1FelixConfiguration(_api::CrdProjectcalicoOrgV1Api, name::String; pretty=nothing, body=nothing, dryRun=nothing, gracePeriodSeconds=nothing, orphanDependents=nothing, propagationPolicy=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "DELETE", IoK8sApimachineryPkgApisMetaV1StatusV2, "/apis/crd.projectcalico.org/v1/felixconfigurations/{name}", ["BearerToken"], body)
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "gracePeriodSeconds", gracePeriodSeconds)  # type Int32
    Swagger.set_param(_ctx.query, "orphanDependents", orphanDependents)  # type Bool
    Swagger.set_param(_ctx.query, "propagationPolicy", propagationPolicy)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

delete a FelixConfiguration
Param: name::String (required)
Param: pretty::String
Param: body::IoK8sApimachineryPkgApisMetaV1DeleteOptionsV2
Param: dryRun::String
Param: gracePeriodSeconds::Int32
Param: orphanDependents::Bool
Param: propagationPolicy::String
Return: IoK8sApimachineryPkgApisMetaV1StatusV2
"""
function deleteCrdProjectcalicoOrgV1FelixConfiguration(_api::CrdProjectcalicoOrgV1Api, name::String; pretty=nothing, body=nothing, dryRun=nothing, gracePeriodSeconds=nothing, orphanDependents=nothing, propagationPolicy=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1FelixConfiguration(_api, name; pretty=pretty, body=body, dryRun=dryRun, gracePeriodSeconds=gracePeriodSeconds, orphanDependents=orphanDependents, propagationPolicy=propagationPolicy, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function deleteCrdProjectcalicoOrgV1FelixConfiguration(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String; pretty=nothing, body=nothing, dryRun=nothing, gracePeriodSeconds=nothing, orphanDependents=nothing, propagationPolicy=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1FelixConfiguration(_api, name; pretty=pretty, body=body, dryRun=dryRun, gracePeriodSeconds=gracePeriodSeconds, orphanDependents=orphanDependents, propagationPolicy=propagationPolicy, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_deleteCrdProjectcalicoOrgV1GlobalNetworkPolicy(_api::CrdProjectcalicoOrgV1Api, name::String; pretty=nothing, body=nothing, dryRun=nothing, gracePeriodSeconds=nothing, orphanDependents=nothing, propagationPolicy=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "DELETE", IoK8sApimachineryPkgApisMetaV1StatusV2, "/apis/crd.projectcalico.org/v1/globalnetworkpolicies/{name}", ["BearerToken"], body)
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "gracePeriodSeconds", gracePeriodSeconds)  # type Int32
    Swagger.set_param(_ctx.query, "orphanDependents", orphanDependents)  # type Bool
    Swagger.set_param(_ctx.query, "propagationPolicy", propagationPolicy)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

delete a GlobalNetworkPolicy
Param: name::String (required)
Param: pretty::String
Param: body::IoK8sApimachineryPkgApisMetaV1DeleteOptionsV2
Param: dryRun::String
Param: gracePeriodSeconds::Int32
Param: orphanDependents::Bool
Param: propagationPolicy::String
Return: IoK8sApimachineryPkgApisMetaV1StatusV2
"""
function deleteCrdProjectcalicoOrgV1GlobalNetworkPolicy(_api::CrdProjectcalicoOrgV1Api, name::String; pretty=nothing, body=nothing, dryRun=nothing, gracePeriodSeconds=nothing, orphanDependents=nothing, propagationPolicy=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1GlobalNetworkPolicy(_api, name; pretty=pretty, body=body, dryRun=dryRun, gracePeriodSeconds=gracePeriodSeconds, orphanDependents=orphanDependents, propagationPolicy=propagationPolicy, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function deleteCrdProjectcalicoOrgV1GlobalNetworkPolicy(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String; pretty=nothing, body=nothing, dryRun=nothing, gracePeriodSeconds=nothing, orphanDependents=nothing, propagationPolicy=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1GlobalNetworkPolicy(_api, name; pretty=pretty, body=body, dryRun=dryRun, gracePeriodSeconds=gracePeriodSeconds, orphanDependents=orphanDependents, propagationPolicy=propagationPolicy, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_deleteCrdProjectcalicoOrgV1GlobalNetworkSet(_api::CrdProjectcalicoOrgV1Api, name::String; pretty=nothing, body=nothing, dryRun=nothing, gracePeriodSeconds=nothing, orphanDependents=nothing, propagationPolicy=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "DELETE", IoK8sApimachineryPkgApisMetaV1StatusV2, "/apis/crd.projectcalico.org/v1/globalnetworksets/{name}", ["BearerToken"], body)
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "gracePeriodSeconds", gracePeriodSeconds)  # type Int32
    Swagger.set_param(_ctx.query, "orphanDependents", orphanDependents)  # type Bool
    Swagger.set_param(_ctx.query, "propagationPolicy", propagationPolicy)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

delete a GlobalNetworkSet
Param: name::String (required)
Param: pretty::String
Param: body::IoK8sApimachineryPkgApisMetaV1DeleteOptionsV2
Param: dryRun::String
Param: gracePeriodSeconds::Int32
Param: orphanDependents::Bool
Param: propagationPolicy::String
Return: IoK8sApimachineryPkgApisMetaV1StatusV2
"""
function deleteCrdProjectcalicoOrgV1GlobalNetworkSet(_api::CrdProjectcalicoOrgV1Api, name::String; pretty=nothing, body=nothing, dryRun=nothing, gracePeriodSeconds=nothing, orphanDependents=nothing, propagationPolicy=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1GlobalNetworkSet(_api, name; pretty=pretty, body=body, dryRun=dryRun, gracePeriodSeconds=gracePeriodSeconds, orphanDependents=orphanDependents, propagationPolicy=propagationPolicy, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function deleteCrdProjectcalicoOrgV1GlobalNetworkSet(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String; pretty=nothing, body=nothing, dryRun=nothing, gracePeriodSeconds=nothing, orphanDependents=nothing, propagationPolicy=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1GlobalNetworkSet(_api, name; pretty=pretty, body=body, dryRun=dryRun, gracePeriodSeconds=gracePeriodSeconds, orphanDependents=orphanDependents, propagationPolicy=propagationPolicy, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_deleteCrdProjectcalicoOrgV1HostEndpoint(_api::CrdProjectcalicoOrgV1Api, name::String; pretty=nothing, body=nothing, dryRun=nothing, gracePeriodSeconds=nothing, orphanDependents=nothing, propagationPolicy=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "DELETE", IoK8sApimachineryPkgApisMetaV1StatusV2, "/apis/crd.projectcalico.org/v1/hostendpoints/{name}", ["BearerToken"], body)
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "gracePeriodSeconds", gracePeriodSeconds)  # type Int32
    Swagger.set_param(_ctx.query, "orphanDependents", orphanDependents)  # type Bool
    Swagger.set_param(_ctx.query, "propagationPolicy", propagationPolicy)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

delete a HostEndpoint
Param: name::String (required)
Param: pretty::String
Param: body::IoK8sApimachineryPkgApisMetaV1DeleteOptionsV2
Param: dryRun::String
Param: gracePeriodSeconds::Int32
Param: orphanDependents::Bool
Param: propagationPolicy::String
Return: IoK8sApimachineryPkgApisMetaV1StatusV2
"""
function deleteCrdProjectcalicoOrgV1HostEndpoint(_api::CrdProjectcalicoOrgV1Api, name::String; pretty=nothing, body=nothing, dryRun=nothing, gracePeriodSeconds=nothing, orphanDependents=nothing, propagationPolicy=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1HostEndpoint(_api, name; pretty=pretty, body=body, dryRun=dryRun, gracePeriodSeconds=gracePeriodSeconds, orphanDependents=orphanDependents, propagationPolicy=propagationPolicy, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function deleteCrdProjectcalicoOrgV1HostEndpoint(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String; pretty=nothing, body=nothing, dryRun=nothing, gracePeriodSeconds=nothing, orphanDependents=nothing, propagationPolicy=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1HostEndpoint(_api, name; pretty=pretty, body=body, dryRun=dryRun, gracePeriodSeconds=gracePeriodSeconds, orphanDependents=orphanDependents, propagationPolicy=propagationPolicy, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_deleteCrdProjectcalicoOrgV1IPAMBlock(_api::CrdProjectcalicoOrgV1Api, name::String; pretty=nothing, body=nothing, dryRun=nothing, gracePeriodSeconds=nothing, orphanDependents=nothing, propagationPolicy=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "DELETE", IoK8sApimachineryPkgApisMetaV1StatusV2, "/apis/crd.projectcalico.org/v1/ipamblocks/{name}", ["BearerToken"], body)
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "gracePeriodSeconds", gracePeriodSeconds)  # type Int32
    Swagger.set_param(_ctx.query, "orphanDependents", orphanDependents)  # type Bool
    Swagger.set_param(_ctx.query, "propagationPolicy", propagationPolicy)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

delete an IPAMBlock
Param: name::String (required)
Param: pretty::String
Param: body::IoK8sApimachineryPkgApisMetaV1DeleteOptionsV2
Param: dryRun::String
Param: gracePeriodSeconds::Int32
Param: orphanDependents::Bool
Param: propagationPolicy::String
Return: IoK8sApimachineryPkgApisMetaV1StatusV2
"""
function deleteCrdProjectcalicoOrgV1IPAMBlock(_api::CrdProjectcalicoOrgV1Api, name::String; pretty=nothing, body=nothing, dryRun=nothing, gracePeriodSeconds=nothing, orphanDependents=nothing, propagationPolicy=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1IPAMBlock(_api, name; pretty=pretty, body=body, dryRun=dryRun, gracePeriodSeconds=gracePeriodSeconds, orphanDependents=orphanDependents, propagationPolicy=propagationPolicy, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function deleteCrdProjectcalicoOrgV1IPAMBlock(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String; pretty=nothing, body=nothing, dryRun=nothing, gracePeriodSeconds=nothing, orphanDependents=nothing, propagationPolicy=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1IPAMBlock(_api, name; pretty=pretty, body=body, dryRun=dryRun, gracePeriodSeconds=gracePeriodSeconds, orphanDependents=orphanDependents, propagationPolicy=propagationPolicy, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_deleteCrdProjectcalicoOrgV1IPPool(_api::CrdProjectcalicoOrgV1Api, name::String; pretty=nothing, body=nothing, dryRun=nothing, gracePeriodSeconds=nothing, orphanDependents=nothing, propagationPolicy=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "DELETE", IoK8sApimachineryPkgApisMetaV1StatusV2, "/apis/crd.projectcalico.org/v1/ippools/{name}", ["BearerToken"], body)
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "gracePeriodSeconds", gracePeriodSeconds)  # type Int32
    Swagger.set_param(_ctx.query, "orphanDependents", orphanDependents)  # type Bool
    Swagger.set_param(_ctx.query, "propagationPolicy", propagationPolicy)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

delete an IPPool
Param: name::String (required)
Param: pretty::String
Param: body::IoK8sApimachineryPkgApisMetaV1DeleteOptionsV2
Param: dryRun::String
Param: gracePeriodSeconds::Int32
Param: orphanDependents::Bool
Param: propagationPolicy::String
Return: IoK8sApimachineryPkgApisMetaV1StatusV2
"""
function deleteCrdProjectcalicoOrgV1IPPool(_api::CrdProjectcalicoOrgV1Api, name::String; pretty=nothing, body=nothing, dryRun=nothing, gracePeriodSeconds=nothing, orphanDependents=nothing, propagationPolicy=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1IPPool(_api, name; pretty=pretty, body=body, dryRun=dryRun, gracePeriodSeconds=gracePeriodSeconds, orphanDependents=orphanDependents, propagationPolicy=propagationPolicy, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function deleteCrdProjectcalicoOrgV1IPPool(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String; pretty=nothing, body=nothing, dryRun=nothing, gracePeriodSeconds=nothing, orphanDependents=nothing, propagationPolicy=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1IPPool(_api, name; pretty=pretty, body=body, dryRun=dryRun, gracePeriodSeconds=gracePeriodSeconds, orphanDependents=orphanDependents, propagationPolicy=propagationPolicy, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_deleteCrdProjectcalicoOrgV1NamespacedNetworkPolicy(_api::CrdProjectcalicoOrgV1Api, name::String, namespace::String; pretty=nothing, body=nothing, dryRun=nothing, gracePeriodSeconds=nothing, orphanDependents=nothing, propagationPolicy=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "DELETE", IoK8sApimachineryPkgApisMetaV1StatusV2, "/apis/crd.projectcalico.org/v1/namespaces/{namespace}/networkpolicies/{name}", ["BearerToken"], body)
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.path, "namespace", namespace)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "gracePeriodSeconds", gracePeriodSeconds)  # type Int32
    Swagger.set_param(_ctx.query, "orphanDependents", orphanDependents)  # type Bool
    Swagger.set_param(_ctx.query, "propagationPolicy", propagationPolicy)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

delete a NetworkPolicy
Param: name::String (required)
Param: namespace::String (required)
Param: pretty::String
Param: body::IoK8sApimachineryPkgApisMetaV1DeleteOptionsV2
Param: dryRun::String
Param: gracePeriodSeconds::Int32
Param: orphanDependents::Bool
Param: propagationPolicy::String
Return: IoK8sApimachineryPkgApisMetaV1StatusV2
"""
function deleteCrdProjectcalicoOrgV1NamespacedNetworkPolicy(_api::CrdProjectcalicoOrgV1Api, name::String, namespace::String; pretty=nothing, body=nothing, dryRun=nothing, gracePeriodSeconds=nothing, orphanDependents=nothing, propagationPolicy=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1NamespacedNetworkPolicy(_api, name, namespace; pretty=pretty, body=body, dryRun=dryRun, gracePeriodSeconds=gracePeriodSeconds, orphanDependents=orphanDependents, propagationPolicy=propagationPolicy, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function deleteCrdProjectcalicoOrgV1NamespacedNetworkPolicy(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String, namespace::String; pretty=nothing, body=nothing, dryRun=nothing, gracePeriodSeconds=nothing, orphanDependents=nothing, propagationPolicy=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1NamespacedNetworkPolicy(_api, name, namespace; pretty=pretty, body=body, dryRun=dryRun, gracePeriodSeconds=gracePeriodSeconds, orphanDependents=orphanDependents, propagationPolicy=propagationPolicy, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_deleteCrdProjectcalicoOrgV1NamespacedNetworkSet(_api::CrdProjectcalicoOrgV1Api, name::String, namespace::String; pretty=nothing, body=nothing, dryRun=nothing, gracePeriodSeconds=nothing, orphanDependents=nothing, propagationPolicy=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "DELETE", IoK8sApimachineryPkgApisMetaV1StatusV2, "/apis/crd.projectcalico.org/v1/namespaces/{namespace}/networksets/{name}", ["BearerToken"], body)
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.path, "namespace", namespace)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "gracePeriodSeconds", gracePeriodSeconds)  # type Int32
    Swagger.set_param(_ctx.query, "orphanDependents", orphanDependents)  # type Bool
    Swagger.set_param(_ctx.query, "propagationPolicy", propagationPolicy)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

delete a NetworkSet
Param: name::String (required)
Param: namespace::String (required)
Param: pretty::String
Param: body::IoK8sApimachineryPkgApisMetaV1DeleteOptionsV2
Param: dryRun::String
Param: gracePeriodSeconds::Int32
Param: orphanDependents::Bool
Param: propagationPolicy::String
Return: IoK8sApimachineryPkgApisMetaV1StatusV2
"""
function deleteCrdProjectcalicoOrgV1NamespacedNetworkSet(_api::CrdProjectcalicoOrgV1Api, name::String, namespace::String; pretty=nothing, body=nothing, dryRun=nothing, gracePeriodSeconds=nothing, orphanDependents=nothing, propagationPolicy=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1NamespacedNetworkSet(_api, name, namespace; pretty=pretty, body=body, dryRun=dryRun, gracePeriodSeconds=gracePeriodSeconds, orphanDependents=orphanDependents, propagationPolicy=propagationPolicy, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function deleteCrdProjectcalicoOrgV1NamespacedNetworkSet(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String, namespace::String; pretty=nothing, body=nothing, dryRun=nothing, gracePeriodSeconds=nothing, orphanDependents=nothing, propagationPolicy=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_deleteCrdProjectcalicoOrgV1NamespacedNetworkSet(_api, name, namespace; pretty=pretty, body=body, dryRun=dryRun, gracePeriodSeconds=gracePeriodSeconds, orphanDependents=orphanDependents, propagationPolicy=propagationPolicy, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_listCrdProjectcalicoOrgV1BGPConfiguration(_api::CrdProjectcalicoOrgV1Api; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "GET", OrgProjectcalicoCrdV1BGPConfigurationList, "/apis/crd.projectcalico.org/v1/bgpconfigurations", ["BearerToken"])
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "allowWatchBookmarks", allowWatchBookmarks)  # type Bool
    Swagger.set_param(_ctx.query, "continue", __continue__)  # type String
    Swagger.set_param(_ctx.query, "fieldSelector", fieldSelector)  # type String
    Swagger.set_param(_ctx.query, "labelSelector", labelSelector)  # type String
    Swagger.set_param(_ctx.query, "limit", limit)  # type Int32
    Swagger.set_param(_ctx.query, "resourceVersion", resourceVersion)  # type String
    Swagger.set_param(_ctx.query, "resourceVersionMatch", resourceVersionMatch)  # type String
    Swagger.set_param(_ctx.query, "timeoutSeconds", timeoutSeconds)  # type Int32
    Swagger.set_param(_ctx.query, "watch", watch)  # type Bool
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

list objects of kind BGPConfiguration
Param: pretty::String
Param: allowWatchBookmarks::Bool
Param: __continue__::String
Param: fieldSelector::String
Param: labelSelector::String
Param: limit::Int32
Param: resourceVersion::String
Param: resourceVersionMatch::String
Param: timeoutSeconds::Int32
Param: watch::Bool
Return: OrgProjectcalicoCrdV1BGPConfigurationList
"""
function listCrdProjectcalicoOrgV1BGPConfiguration(_api::CrdProjectcalicoOrgV1Api; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_listCrdProjectcalicoOrgV1BGPConfiguration(_api; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function listCrdProjectcalicoOrgV1BGPConfiguration(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_listCrdProjectcalicoOrgV1BGPConfiguration(_api; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_listCrdProjectcalicoOrgV1BGPPeer(_api::CrdProjectcalicoOrgV1Api; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "GET", OrgProjectcalicoCrdV1BGPPeerList, "/apis/crd.projectcalico.org/v1/bgppeers", ["BearerToken"])
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "allowWatchBookmarks", allowWatchBookmarks)  # type Bool
    Swagger.set_param(_ctx.query, "continue", __continue__)  # type String
    Swagger.set_param(_ctx.query, "fieldSelector", fieldSelector)  # type String
    Swagger.set_param(_ctx.query, "labelSelector", labelSelector)  # type String
    Swagger.set_param(_ctx.query, "limit", limit)  # type Int32
    Swagger.set_param(_ctx.query, "resourceVersion", resourceVersion)  # type String
    Swagger.set_param(_ctx.query, "resourceVersionMatch", resourceVersionMatch)  # type String
    Swagger.set_param(_ctx.query, "timeoutSeconds", timeoutSeconds)  # type Int32
    Swagger.set_param(_ctx.query, "watch", watch)  # type Bool
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

list objects of kind BGPPeer
Param: pretty::String
Param: allowWatchBookmarks::Bool
Param: __continue__::String
Param: fieldSelector::String
Param: labelSelector::String
Param: limit::Int32
Param: resourceVersion::String
Param: resourceVersionMatch::String
Param: timeoutSeconds::Int32
Param: watch::Bool
Return: OrgProjectcalicoCrdV1BGPPeerList
"""
function listCrdProjectcalicoOrgV1BGPPeer(_api::CrdProjectcalicoOrgV1Api; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_listCrdProjectcalicoOrgV1BGPPeer(_api; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function listCrdProjectcalicoOrgV1BGPPeer(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_listCrdProjectcalicoOrgV1BGPPeer(_api; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_listCrdProjectcalicoOrgV1BlockAffinity(_api::CrdProjectcalicoOrgV1Api; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "GET", OrgProjectcalicoCrdV1BlockAffinityList, "/apis/crd.projectcalico.org/v1/blockaffinities", ["BearerToken"])
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "allowWatchBookmarks", allowWatchBookmarks)  # type Bool
    Swagger.set_param(_ctx.query, "continue", __continue__)  # type String
    Swagger.set_param(_ctx.query, "fieldSelector", fieldSelector)  # type String
    Swagger.set_param(_ctx.query, "labelSelector", labelSelector)  # type String
    Swagger.set_param(_ctx.query, "limit", limit)  # type Int32
    Swagger.set_param(_ctx.query, "resourceVersion", resourceVersion)  # type String
    Swagger.set_param(_ctx.query, "resourceVersionMatch", resourceVersionMatch)  # type String
    Swagger.set_param(_ctx.query, "timeoutSeconds", timeoutSeconds)  # type Int32
    Swagger.set_param(_ctx.query, "watch", watch)  # type Bool
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

list objects of kind BlockAffinity
Param: pretty::String
Param: allowWatchBookmarks::Bool
Param: __continue__::String
Param: fieldSelector::String
Param: labelSelector::String
Param: limit::Int32
Param: resourceVersion::String
Param: resourceVersionMatch::String
Param: timeoutSeconds::Int32
Param: watch::Bool
Return: OrgProjectcalicoCrdV1BlockAffinityList
"""
function listCrdProjectcalicoOrgV1BlockAffinity(_api::CrdProjectcalicoOrgV1Api; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_listCrdProjectcalicoOrgV1BlockAffinity(_api; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function listCrdProjectcalicoOrgV1BlockAffinity(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_listCrdProjectcalicoOrgV1BlockAffinity(_api; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_listCrdProjectcalicoOrgV1ClusterInformation(_api::CrdProjectcalicoOrgV1Api; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "GET", OrgProjectcalicoCrdV1ClusterInformationList, "/apis/crd.projectcalico.org/v1/clusterinformations", ["BearerToken"])
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "allowWatchBookmarks", allowWatchBookmarks)  # type Bool
    Swagger.set_param(_ctx.query, "continue", __continue__)  # type String
    Swagger.set_param(_ctx.query, "fieldSelector", fieldSelector)  # type String
    Swagger.set_param(_ctx.query, "labelSelector", labelSelector)  # type String
    Swagger.set_param(_ctx.query, "limit", limit)  # type Int32
    Swagger.set_param(_ctx.query, "resourceVersion", resourceVersion)  # type String
    Swagger.set_param(_ctx.query, "resourceVersionMatch", resourceVersionMatch)  # type String
    Swagger.set_param(_ctx.query, "timeoutSeconds", timeoutSeconds)  # type Int32
    Swagger.set_param(_ctx.query, "watch", watch)  # type Bool
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

list objects of kind ClusterInformation
Param: pretty::String
Param: allowWatchBookmarks::Bool
Param: __continue__::String
Param: fieldSelector::String
Param: labelSelector::String
Param: limit::Int32
Param: resourceVersion::String
Param: resourceVersionMatch::String
Param: timeoutSeconds::Int32
Param: watch::Bool
Return: OrgProjectcalicoCrdV1ClusterInformationList
"""
function listCrdProjectcalicoOrgV1ClusterInformation(_api::CrdProjectcalicoOrgV1Api; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_listCrdProjectcalicoOrgV1ClusterInformation(_api; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function listCrdProjectcalicoOrgV1ClusterInformation(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_listCrdProjectcalicoOrgV1ClusterInformation(_api; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_listCrdProjectcalicoOrgV1FelixConfiguration(_api::CrdProjectcalicoOrgV1Api; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "GET", OrgProjectcalicoCrdV1FelixConfigurationList, "/apis/crd.projectcalico.org/v1/felixconfigurations", ["BearerToken"])
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "allowWatchBookmarks", allowWatchBookmarks)  # type Bool
    Swagger.set_param(_ctx.query, "continue", __continue__)  # type String
    Swagger.set_param(_ctx.query, "fieldSelector", fieldSelector)  # type String
    Swagger.set_param(_ctx.query, "labelSelector", labelSelector)  # type String
    Swagger.set_param(_ctx.query, "limit", limit)  # type Int32
    Swagger.set_param(_ctx.query, "resourceVersion", resourceVersion)  # type String
    Swagger.set_param(_ctx.query, "resourceVersionMatch", resourceVersionMatch)  # type String
    Swagger.set_param(_ctx.query, "timeoutSeconds", timeoutSeconds)  # type Int32
    Swagger.set_param(_ctx.query, "watch", watch)  # type Bool
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

list objects of kind FelixConfiguration
Param: pretty::String
Param: allowWatchBookmarks::Bool
Param: __continue__::String
Param: fieldSelector::String
Param: labelSelector::String
Param: limit::Int32
Param: resourceVersion::String
Param: resourceVersionMatch::String
Param: timeoutSeconds::Int32
Param: watch::Bool
Return: OrgProjectcalicoCrdV1FelixConfigurationList
"""
function listCrdProjectcalicoOrgV1FelixConfiguration(_api::CrdProjectcalicoOrgV1Api; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_listCrdProjectcalicoOrgV1FelixConfiguration(_api; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function listCrdProjectcalicoOrgV1FelixConfiguration(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_listCrdProjectcalicoOrgV1FelixConfiguration(_api; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_listCrdProjectcalicoOrgV1GlobalNetworkPolicy(_api::CrdProjectcalicoOrgV1Api; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "GET", OrgProjectcalicoCrdV1GlobalNetworkPolicyList, "/apis/crd.projectcalico.org/v1/globalnetworkpolicies", ["BearerToken"])
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "allowWatchBookmarks", allowWatchBookmarks)  # type Bool
    Swagger.set_param(_ctx.query, "continue", __continue__)  # type String
    Swagger.set_param(_ctx.query, "fieldSelector", fieldSelector)  # type String
    Swagger.set_param(_ctx.query, "labelSelector", labelSelector)  # type String
    Swagger.set_param(_ctx.query, "limit", limit)  # type Int32
    Swagger.set_param(_ctx.query, "resourceVersion", resourceVersion)  # type String
    Swagger.set_param(_ctx.query, "resourceVersionMatch", resourceVersionMatch)  # type String
    Swagger.set_param(_ctx.query, "timeoutSeconds", timeoutSeconds)  # type Int32
    Swagger.set_param(_ctx.query, "watch", watch)  # type Bool
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

list objects of kind GlobalNetworkPolicy
Param: pretty::String
Param: allowWatchBookmarks::Bool
Param: __continue__::String
Param: fieldSelector::String
Param: labelSelector::String
Param: limit::Int32
Param: resourceVersion::String
Param: resourceVersionMatch::String
Param: timeoutSeconds::Int32
Param: watch::Bool
Return: OrgProjectcalicoCrdV1GlobalNetworkPolicyList
"""
function listCrdProjectcalicoOrgV1GlobalNetworkPolicy(_api::CrdProjectcalicoOrgV1Api; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_listCrdProjectcalicoOrgV1GlobalNetworkPolicy(_api; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function listCrdProjectcalicoOrgV1GlobalNetworkPolicy(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_listCrdProjectcalicoOrgV1GlobalNetworkPolicy(_api; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_listCrdProjectcalicoOrgV1GlobalNetworkSet(_api::CrdProjectcalicoOrgV1Api; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "GET", OrgProjectcalicoCrdV1GlobalNetworkSetList, "/apis/crd.projectcalico.org/v1/globalnetworksets", ["BearerToken"])
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "allowWatchBookmarks", allowWatchBookmarks)  # type Bool
    Swagger.set_param(_ctx.query, "continue", __continue__)  # type String
    Swagger.set_param(_ctx.query, "fieldSelector", fieldSelector)  # type String
    Swagger.set_param(_ctx.query, "labelSelector", labelSelector)  # type String
    Swagger.set_param(_ctx.query, "limit", limit)  # type Int32
    Swagger.set_param(_ctx.query, "resourceVersion", resourceVersion)  # type String
    Swagger.set_param(_ctx.query, "resourceVersionMatch", resourceVersionMatch)  # type String
    Swagger.set_param(_ctx.query, "timeoutSeconds", timeoutSeconds)  # type Int32
    Swagger.set_param(_ctx.query, "watch", watch)  # type Bool
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

list objects of kind GlobalNetworkSet
Param: pretty::String
Param: allowWatchBookmarks::Bool
Param: __continue__::String
Param: fieldSelector::String
Param: labelSelector::String
Param: limit::Int32
Param: resourceVersion::String
Param: resourceVersionMatch::String
Param: timeoutSeconds::Int32
Param: watch::Bool
Return: OrgProjectcalicoCrdV1GlobalNetworkSetList
"""
function listCrdProjectcalicoOrgV1GlobalNetworkSet(_api::CrdProjectcalicoOrgV1Api; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_listCrdProjectcalicoOrgV1GlobalNetworkSet(_api; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function listCrdProjectcalicoOrgV1GlobalNetworkSet(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_listCrdProjectcalicoOrgV1GlobalNetworkSet(_api; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_listCrdProjectcalicoOrgV1HostEndpoint(_api::CrdProjectcalicoOrgV1Api; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "GET", OrgProjectcalicoCrdV1HostEndpointList, "/apis/crd.projectcalico.org/v1/hostendpoints", ["BearerToken"])
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "allowWatchBookmarks", allowWatchBookmarks)  # type Bool
    Swagger.set_param(_ctx.query, "continue", __continue__)  # type String
    Swagger.set_param(_ctx.query, "fieldSelector", fieldSelector)  # type String
    Swagger.set_param(_ctx.query, "labelSelector", labelSelector)  # type String
    Swagger.set_param(_ctx.query, "limit", limit)  # type Int32
    Swagger.set_param(_ctx.query, "resourceVersion", resourceVersion)  # type String
    Swagger.set_param(_ctx.query, "resourceVersionMatch", resourceVersionMatch)  # type String
    Swagger.set_param(_ctx.query, "timeoutSeconds", timeoutSeconds)  # type Int32
    Swagger.set_param(_ctx.query, "watch", watch)  # type Bool
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

list objects of kind HostEndpoint
Param: pretty::String
Param: allowWatchBookmarks::Bool
Param: __continue__::String
Param: fieldSelector::String
Param: labelSelector::String
Param: limit::Int32
Param: resourceVersion::String
Param: resourceVersionMatch::String
Param: timeoutSeconds::Int32
Param: watch::Bool
Return: OrgProjectcalicoCrdV1HostEndpointList
"""
function listCrdProjectcalicoOrgV1HostEndpoint(_api::CrdProjectcalicoOrgV1Api; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_listCrdProjectcalicoOrgV1HostEndpoint(_api; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function listCrdProjectcalicoOrgV1HostEndpoint(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_listCrdProjectcalicoOrgV1HostEndpoint(_api; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_listCrdProjectcalicoOrgV1IPAMBlock(_api::CrdProjectcalicoOrgV1Api; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "GET", OrgProjectcalicoCrdV1IPAMBlockList, "/apis/crd.projectcalico.org/v1/ipamblocks", ["BearerToken"])
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "allowWatchBookmarks", allowWatchBookmarks)  # type Bool
    Swagger.set_param(_ctx.query, "continue", __continue__)  # type String
    Swagger.set_param(_ctx.query, "fieldSelector", fieldSelector)  # type String
    Swagger.set_param(_ctx.query, "labelSelector", labelSelector)  # type String
    Swagger.set_param(_ctx.query, "limit", limit)  # type Int32
    Swagger.set_param(_ctx.query, "resourceVersion", resourceVersion)  # type String
    Swagger.set_param(_ctx.query, "resourceVersionMatch", resourceVersionMatch)  # type String
    Swagger.set_param(_ctx.query, "timeoutSeconds", timeoutSeconds)  # type Int32
    Swagger.set_param(_ctx.query, "watch", watch)  # type Bool
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

list objects of kind IPAMBlock
Param: pretty::String
Param: allowWatchBookmarks::Bool
Param: __continue__::String
Param: fieldSelector::String
Param: labelSelector::String
Param: limit::Int32
Param: resourceVersion::String
Param: resourceVersionMatch::String
Param: timeoutSeconds::Int32
Param: watch::Bool
Return: OrgProjectcalicoCrdV1IPAMBlockList
"""
function listCrdProjectcalicoOrgV1IPAMBlock(_api::CrdProjectcalicoOrgV1Api; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_listCrdProjectcalicoOrgV1IPAMBlock(_api; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function listCrdProjectcalicoOrgV1IPAMBlock(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_listCrdProjectcalicoOrgV1IPAMBlock(_api; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_listCrdProjectcalicoOrgV1IPPool(_api::CrdProjectcalicoOrgV1Api; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "GET", OrgProjectcalicoCrdV1IPPoolList, "/apis/crd.projectcalico.org/v1/ippools", ["BearerToken"])
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "allowWatchBookmarks", allowWatchBookmarks)  # type Bool
    Swagger.set_param(_ctx.query, "continue", __continue__)  # type String
    Swagger.set_param(_ctx.query, "fieldSelector", fieldSelector)  # type String
    Swagger.set_param(_ctx.query, "labelSelector", labelSelector)  # type String
    Swagger.set_param(_ctx.query, "limit", limit)  # type Int32
    Swagger.set_param(_ctx.query, "resourceVersion", resourceVersion)  # type String
    Swagger.set_param(_ctx.query, "resourceVersionMatch", resourceVersionMatch)  # type String
    Swagger.set_param(_ctx.query, "timeoutSeconds", timeoutSeconds)  # type Int32
    Swagger.set_param(_ctx.query, "watch", watch)  # type Bool
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

list objects of kind IPPool
Param: pretty::String
Param: allowWatchBookmarks::Bool
Param: __continue__::String
Param: fieldSelector::String
Param: labelSelector::String
Param: limit::Int32
Param: resourceVersion::String
Param: resourceVersionMatch::String
Param: timeoutSeconds::Int32
Param: watch::Bool
Return: OrgProjectcalicoCrdV1IPPoolList
"""
function listCrdProjectcalicoOrgV1IPPool(_api::CrdProjectcalicoOrgV1Api; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_listCrdProjectcalicoOrgV1IPPool(_api; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function listCrdProjectcalicoOrgV1IPPool(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_listCrdProjectcalicoOrgV1IPPool(_api; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_listCrdProjectcalicoOrgV1NamespacedNetworkPolicy(_api::CrdProjectcalicoOrgV1Api, namespace::String; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "GET", OrgProjectcalicoCrdV1NetworkPolicyList, "/apis/crd.projectcalico.org/v1/namespaces/{namespace}/networkpolicies", ["BearerToken"])
    Swagger.set_param(_ctx.path, "namespace", namespace)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "allowWatchBookmarks", allowWatchBookmarks)  # type Bool
    Swagger.set_param(_ctx.query, "continue", __continue__)  # type String
    Swagger.set_param(_ctx.query, "fieldSelector", fieldSelector)  # type String
    Swagger.set_param(_ctx.query, "labelSelector", labelSelector)  # type String
    Swagger.set_param(_ctx.query, "limit", limit)  # type Int32
    Swagger.set_param(_ctx.query, "resourceVersion", resourceVersion)  # type String
    Swagger.set_param(_ctx.query, "resourceVersionMatch", resourceVersionMatch)  # type String
    Swagger.set_param(_ctx.query, "timeoutSeconds", timeoutSeconds)  # type Int32
    Swagger.set_param(_ctx.query, "watch", watch)  # type Bool
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

list objects of kind NetworkPolicy
Param: namespace::String (required)
Param: pretty::String
Param: allowWatchBookmarks::Bool
Param: __continue__::String
Param: fieldSelector::String
Param: labelSelector::String
Param: limit::Int32
Param: resourceVersion::String
Param: resourceVersionMatch::String
Param: timeoutSeconds::Int32
Param: watch::Bool
Return: OrgProjectcalicoCrdV1NetworkPolicyList
"""
function listCrdProjectcalicoOrgV1NamespacedNetworkPolicy(_api::CrdProjectcalicoOrgV1Api, namespace::String; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_listCrdProjectcalicoOrgV1NamespacedNetworkPolicy(_api, namespace; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function listCrdProjectcalicoOrgV1NamespacedNetworkPolicy(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, namespace::String; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_listCrdProjectcalicoOrgV1NamespacedNetworkPolicy(_api, namespace; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_listCrdProjectcalicoOrgV1NamespacedNetworkSet(_api::CrdProjectcalicoOrgV1Api, namespace::String; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "GET", OrgProjectcalicoCrdV1NetworkSetList, "/apis/crd.projectcalico.org/v1/namespaces/{namespace}/networksets", ["BearerToken"])
    Swagger.set_param(_ctx.path, "namespace", namespace)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "allowWatchBookmarks", allowWatchBookmarks)  # type Bool
    Swagger.set_param(_ctx.query, "continue", __continue__)  # type String
    Swagger.set_param(_ctx.query, "fieldSelector", fieldSelector)  # type String
    Swagger.set_param(_ctx.query, "labelSelector", labelSelector)  # type String
    Swagger.set_param(_ctx.query, "limit", limit)  # type Int32
    Swagger.set_param(_ctx.query, "resourceVersion", resourceVersion)  # type String
    Swagger.set_param(_ctx.query, "resourceVersionMatch", resourceVersionMatch)  # type String
    Swagger.set_param(_ctx.query, "timeoutSeconds", timeoutSeconds)  # type Int32
    Swagger.set_param(_ctx.query, "watch", watch)  # type Bool
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

list objects of kind NetworkSet
Param: namespace::String (required)
Param: pretty::String
Param: allowWatchBookmarks::Bool
Param: __continue__::String
Param: fieldSelector::String
Param: labelSelector::String
Param: limit::Int32
Param: resourceVersion::String
Param: resourceVersionMatch::String
Param: timeoutSeconds::Int32
Param: watch::Bool
Return: OrgProjectcalicoCrdV1NetworkSetList
"""
function listCrdProjectcalicoOrgV1NamespacedNetworkSet(_api::CrdProjectcalicoOrgV1Api, namespace::String; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_listCrdProjectcalicoOrgV1NamespacedNetworkSet(_api, namespace; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function listCrdProjectcalicoOrgV1NamespacedNetworkSet(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, namespace::String; pretty=nothing, allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_listCrdProjectcalicoOrgV1NamespacedNetworkSet(_api, namespace; pretty=pretty, allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_listCrdProjectcalicoOrgV1NetworkPolicyForAllNamespaces(_api::CrdProjectcalicoOrgV1Api; allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, pretty=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "GET", OrgProjectcalicoCrdV1NetworkPolicyList, "/apis/crd.projectcalico.org/v1/networkpolicies", ["BearerToken"])
    Swagger.set_param(_ctx.query, "allowWatchBookmarks", allowWatchBookmarks)  # type Bool
    Swagger.set_param(_ctx.query, "continue", __continue__)  # type String
    Swagger.set_param(_ctx.query, "fieldSelector", fieldSelector)  # type String
    Swagger.set_param(_ctx.query, "labelSelector", labelSelector)  # type String
    Swagger.set_param(_ctx.query, "limit", limit)  # type Int32
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "resourceVersion", resourceVersion)  # type String
    Swagger.set_param(_ctx.query, "resourceVersionMatch", resourceVersionMatch)  # type String
    Swagger.set_param(_ctx.query, "timeoutSeconds", timeoutSeconds)  # type Int32
    Swagger.set_param(_ctx.query, "watch", watch)  # type Bool
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

list objects of kind NetworkPolicy
Param: allowWatchBookmarks::Bool
Param: __continue__::String
Param: fieldSelector::String
Param: labelSelector::String
Param: limit::Int32
Param: pretty::String
Param: resourceVersion::String
Param: resourceVersionMatch::String
Param: timeoutSeconds::Int32
Param: watch::Bool
Return: OrgProjectcalicoCrdV1NetworkPolicyList
"""
function listCrdProjectcalicoOrgV1NetworkPolicyForAllNamespaces(_api::CrdProjectcalicoOrgV1Api; allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, pretty=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_listCrdProjectcalicoOrgV1NetworkPolicyForAllNamespaces(_api; allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, pretty=pretty, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function listCrdProjectcalicoOrgV1NetworkPolicyForAllNamespaces(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel; allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, pretty=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_listCrdProjectcalicoOrgV1NetworkPolicyForAllNamespaces(_api; allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, pretty=pretty, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_listCrdProjectcalicoOrgV1NetworkSetForAllNamespaces(_api::CrdProjectcalicoOrgV1Api; allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, pretty=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "GET", OrgProjectcalicoCrdV1NetworkSetList, "/apis/crd.projectcalico.org/v1/networksets", ["BearerToken"])
    Swagger.set_param(_ctx.query, "allowWatchBookmarks", allowWatchBookmarks)  # type Bool
    Swagger.set_param(_ctx.query, "continue", __continue__)  # type String
    Swagger.set_param(_ctx.query, "fieldSelector", fieldSelector)  # type String
    Swagger.set_param(_ctx.query, "labelSelector", labelSelector)  # type String
    Swagger.set_param(_ctx.query, "limit", limit)  # type Int32
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "resourceVersion", resourceVersion)  # type String
    Swagger.set_param(_ctx.query, "resourceVersionMatch", resourceVersionMatch)  # type String
    Swagger.set_param(_ctx.query, "timeoutSeconds", timeoutSeconds)  # type Int32
    Swagger.set_param(_ctx.query, "watch", watch)  # type Bool
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

list objects of kind NetworkSet
Param: allowWatchBookmarks::Bool
Param: __continue__::String
Param: fieldSelector::String
Param: labelSelector::String
Param: limit::Int32
Param: pretty::String
Param: resourceVersion::String
Param: resourceVersionMatch::String
Param: timeoutSeconds::Int32
Param: watch::Bool
Return: OrgProjectcalicoCrdV1NetworkSetList
"""
function listCrdProjectcalicoOrgV1NetworkSetForAllNamespaces(_api::CrdProjectcalicoOrgV1Api; allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, pretty=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_listCrdProjectcalicoOrgV1NetworkSetForAllNamespaces(_api; allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, pretty=pretty, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function listCrdProjectcalicoOrgV1NetworkSetForAllNamespaces(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel; allowWatchBookmarks=nothing, __continue__=nothing, fieldSelector=nothing, labelSelector=nothing, limit=nothing, pretty=nothing, resourceVersion=nothing, resourceVersionMatch=nothing, timeoutSeconds=nothing, watch=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_listCrdProjectcalicoOrgV1NetworkSetForAllNamespaces(_api; allowWatchBookmarks=allowWatchBookmarks, __continue__=__continue__, fieldSelector=fieldSelector, labelSelector=labelSelector, limit=limit, pretty=pretty, resourceVersion=resourceVersion, resourceVersionMatch=resourceVersionMatch, timeoutSeconds=timeoutSeconds, watch=watch, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_patchCrdProjectcalicoOrgV1BGPConfiguration(_api::CrdProjectcalicoOrgV1Api, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "PATCH", OrgProjectcalicoCrdV1BGPConfiguration, "/apis/crd.projectcalico.org/v1/bgpconfigurations/{name}", ["BearerToken"], body)
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "fieldManager", fieldManager)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json-patch+json", "application/merge-patch+json", "application/apply-patch+yaml"] : [_mediaType])
    return _ctx
end

"""

partially update the specified BGPConfiguration
Param: name::String (required)
Param: body::IoK8sApimachineryPkgApisMetaV1Patch (required)
Param: pretty::String
Param: dryRun::String
Param: fieldManager::String
Return: OrgProjectcalicoCrdV1BGPConfiguration
"""
function patchCrdProjectcalicoOrgV1BGPConfiguration(_api::CrdProjectcalicoOrgV1Api, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_patchCrdProjectcalicoOrgV1BGPConfiguration(_api, name, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function patchCrdProjectcalicoOrgV1BGPConfiguration(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_patchCrdProjectcalicoOrgV1BGPConfiguration(_api, name, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_patchCrdProjectcalicoOrgV1BGPPeer(_api::CrdProjectcalicoOrgV1Api, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "PATCH", OrgProjectcalicoCrdV1BGPPeer, "/apis/crd.projectcalico.org/v1/bgppeers/{name}", ["BearerToken"], body)
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "fieldManager", fieldManager)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json-patch+json", "application/merge-patch+json", "application/apply-patch+yaml"] : [_mediaType])
    return _ctx
end

"""

partially update the specified BGPPeer
Param: name::String (required)
Param: body::IoK8sApimachineryPkgApisMetaV1Patch (required)
Param: pretty::String
Param: dryRun::String
Param: fieldManager::String
Return: OrgProjectcalicoCrdV1BGPPeer
"""
function patchCrdProjectcalicoOrgV1BGPPeer(_api::CrdProjectcalicoOrgV1Api, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_patchCrdProjectcalicoOrgV1BGPPeer(_api, name, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function patchCrdProjectcalicoOrgV1BGPPeer(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_patchCrdProjectcalicoOrgV1BGPPeer(_api, name, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_patchCrdProjectcalicoOrgV1BlockAffinity(_api::CrdProjectcalicoOrgV1Api, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "PATCH", OrgProjectcalicoCrdV1BlockAffinity, "/apis/crd.projectcalico.org/v1/blockaffinities/{name}", ["BearerToken"], body)
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "fieldManager", fieldManager)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json-patch+json", "application/merge-patch+json", "application/apply-patch+yaml"] : [_mediaType])
    return _ctx
end

"""

partially update the specified BlockAffinity
Param: name::String (required)
Param: body::IoK8sApimachineryPkgApisMetaV1Patch (required)
Param: pretty::String
Param: dryRun::String
Param: fieldManager::String
Return: OrgProjectcalicoCrdV1BlockAffinity
"""
function patchCrdProjectcalicoOrgV1BlockAffinity(_api::CrdProjectcalicoOrgV1Api, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_patchCrdProjectcalicoOrgV1BlockAffinity(_api, name, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function patchCrdProjectcalicoOrgV1BlockAffinity(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_patchCrdProjectcalicoOrgV1BlockAffinity(_api, name, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_patchCrdProjectcalicoOrgV1ClusterInformation(_api::CrdProjectcalicoOrgV1Api, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "PATCH", OrgProjectcalicoCrdV1ClusterInformation, "/apis/crd.projectcalico.org/v1/clusterinformations/{name}", ["BearerToken"], body)
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "fieldManager", fieldManager)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json-patch+json", "application/merge-patch+json", "application/apply-patch+yaml"] : [_mediaType])
    return _ctx
end

"""

partially update the specified ClusterInformation
Param: name::String (required)
Param: body::IoK8sApimachineryPkgApisMetaV1Patch (required)
Param: pretty::String
Param: dryRun::String
Param: fieldManager::String
Return: OrgProjectcalicoCrdV1ClusterInformation
"""
function patchCrdProjectcalicoOrgV1ClusterInformation(_api::CrdProjectcalicoOrgV1Api, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_patchCrdProjectcalicoOrgV1ClusterInformation(_api, name, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function patchCrdProjectcalicoOrgV1ClusterInformation(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_patchCrdProjectcalicoOrgV1ClusterInformation(_api, name, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_patchCrdProjectcalicoOrgV1FelixConfiguration(_api::CrdProjectcalicoOrgV1Api, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "PATCH", OrgProjectcalicoCrdV1FelixConfiguration, "/apis/crd.projectcalico.org/v1/felixconfigurations/{name}", ["BearerToken"], body)
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "fieldManager", fieldManager)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json-patch+json", "application/merge-patch+json", "application/apply-patch+yaml"] : [_mediaType])
    return _ctx
end

"""

partially update the specified FelixConfiguration
Param: name::String (required)
Param: body::IoK8sApimachineryPkgApisMetaV1Patch (required)
Param: pretty::String
Param: dryRun::String
Param: fieldManager::String
Return: OrgProjectcalicoCrdV1FelixConfiguration
"""
function patchCrdProjectcalicoOrgV1FelixConfiguration(_api::CrdProjectcalicoOrgV1Api, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_patchCrdProjectcalicoOrgV1FelixConfiguration(_api, name, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function patchCrdProjectcalicoOrgV1FelixConfiguration(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_patchCrdProjectcalicoOrgV1FelixConfiguration(_api, name, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_patchCrdProjectcalicoOrgV1GlobalNetworkPolicy(_api::CrdProjectcalicoOrgV1Api, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "PATCH", OrgProjectcalicoCrdV1GlobalNetworkPolicy, "/apis/crd.projectcalico.org/v1/globalnetworkpolicies/{name}", ["BearerToken"], body)
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "fieldManager", fieldManager)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json-patch+json", "application/merge-patch+json", "application/apply-patch+yaml"] : [_mediaType])
    return _ctx
end

"""

partially update the specified GlobalNetworkPolicy
Param: name::String (required)
Param: body::IoK8sApimachineryPkgApisMetaV1Patch (required)
Param: pretty::String
Param: dryRun::String
Param: fieldManager::String
Return: OrgProjectcalicoCrdV1GlobalNetworkPolicy
"""
function patchCrdProjectcalicoOrgV1GlobalNetworkPolicy(_api::CrdProjectcalicoOrgV1Api, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_patchCrdProjectcalicoOrgV1GlobalNetworkPolicy(_api, name, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function patchCrdProjectcalicoOrgV1GlobalNetworkPolicy(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_patchCrdProjectcalicoOrgV1GlobalNetworkPolicy(_api, name, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_patchCrdProjectcalicoOrgV1GlobalNetworkSet(_api::CrdProjectcalicoOrgV1Api, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "PATCH", OrgProjectcalicoCrdV1GlobalNetworkSet, "/apis/crd.projectcalico.org/v1/globalnetworksets/{name}", ["BearerToken"], body)
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "fieldManager", fieldManager)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json-patch+json", "application/merge-patch+json", "application/apply-patch+yaml"] : [_mediaType])
    return _ctx
end

"""

partially update the specified GlobalNetworkSet
Param: name::String (required)
Param: body::IoK8sApimachineryPkgApisMetaV1Patch (required)
Param: pretty::String
Param: dryRun::String
Param: fieldManager::String
Return: OrgProjectcalicoCrdV1GlobalNetworkSet
"""
function patchCrdProjectcalicoOrgV1GlobalNetworkSet(_api::CrdProjectcalicoOrgV1Api, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_patchCrdProjectcalicoOrgV1GlobalNetworkSet(_api, name, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function patchCrdProjectcalicoOrgV1GlobalNetworkSet(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_patchCrdProjectcalicoOrgV1GlobalNetworkSet(_api, name, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_patchCrdProjectcalicoOrgV1HostEndpoint(_api::CrdProjectcalicoOrgV1Api, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "PATCH", OrgProjectcalicoCrdV1HostEndpoint, "/apis/crd.projectcalico.org/v1/hostendpoints/{name}", ["BearerToken"], body)
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "fieldManager", fieldManager)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json-patch+json", "application/merge-patch+json", "application/apply-patch+yaml"] : [_mediaType])
    return _ctx
end

"""

partially update the specified HostEndpoint
Param: name::String (required)
Param: body::IoK8sApimachineryPkgApisMetaV1Patch (required)
Param: pretty::String
Param: dryRun::String
Param: fieldManager::String
Return: OrgProjectcalicoCrdV1HostEndpoint
"""
function patchCrdProjectcalicoOrgV1HostEndpoint(_api::CrdProjectcalicoOrgV1Api, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_patchCrdProjectcalicoOrgV1HostEndpoint(_api, name, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function patchCrdProjectcalicoOrgV1HostEndpoint(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_patchCrdProjectcalicoOrgV1HostEndpoint(_api, name, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_patchCrdProjectcalicoOrgV1IPAMBlock(_api::CrdProjectcalicoOrgV1Api, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "PATCH", OrgProjectcalicoCrdV1IPAMBlock, "/apis/crd.projectcalico.org/v1/ipamblocks/{name}", ["BearerToken"], body)
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "fieldManager", fieldManager)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json-patch+json", "application/merge-patch+json", "application/apply-patch+yaml"] : [_mediaType])
    return _ctx
end

"""

partially update the specified IPAMBlock
Param: name::String (required)
Param: body::IoK8sApimachineryPkgApisMetaV1Patch (required)
Param: pretty::String
Param: dryRun::String
Param: fieldManager::String
Return: OrgProjectcalicoCrdV1IPAMBlock
"""
function patchCrdProjectcalicoOrgV1IPAMBlock(_api::CrdProjectcalicoOrgV1Api, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_patchCrdProjectcalicoOrgV1IPAMBlock(_api, name, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function patchCrdProjectcalicoOrgV1IPAMBlock(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_patchCrdProjectcalicoOrgV1IPAMBlock(_api, name, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_patchCrdProjectcalicoOrgV1IPPool(_api::CrdProjectcalicoOrgV1Api, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "PATCH", OrgProjectcalicoCrdV1IPPool, "/apis/crd.projectcalico.org/v1/ippools/{name}", ["BearerToken"], body)
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "fieldManager", fieldManager)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json-patch+json", "application/merge-patch+json", "application/apply-patch+yaml"] : [_mediaType])
    return _ctx
end

"""

partially update the specified IPPool
Param: name::String (required)
Param: body::IoK8sApimachineryPkgApisMetaV1Patch (required)
Param: pretty::String
Param: dryRun::String
Param: fieldManager::String
Return: OrgProjectcalicoCrdV1IPPool
"""
function patchCrdProjectcalicoOrgV1IPPool(_api::CrdProjectcalicoOrgV1Api, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_patchCrdProjectcalicoOrgV1IPPool(_api, name, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function patchCrdProjectcalicoOrgV1IPPool(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_patchCrdProjectcalicoOrgV1IPPool(_api, name, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_patchCrdProjectcalicoOrgV1NamespacedNetworkPolicy(_api::CrdProjectcalicoOrgV1Api, name::String, namespace::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "PATCH", OrgProjectcalicoCrdV1NetworkPolicy, "/apis/crd.projectcalico.org/v1/namespaces/{namespace}/networkpolicies/{name}", ["BearerToken"], body)
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.path, "namespace", namespace)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "fieldManager", fieldManager)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json-patch+json", "application/merge-patch+json", "application/apply-patch+yaml"] : [_mediaType])
    return _ctx
end

"""

partially update the specified NetworkPolicy
Param: name::String (required)
Param: namespace::String (required)
Param: body::IoK8sApimachineryPkgApisMetaV1Patch (required)
Param: pretty::String
Param: dryRun::String
Param: fieldManager::String
Return: OrgProjectcalicoCrdV1NetworkPolicy
"""
function patchCrdProjectcalicoOrgV1NamespacedNetworkPolicy(_api::CrdProjectcalicoOrgV1Api, name::String, namespace::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_patchCrdProjectcalicoOrgV1NamespacedNetworkPolicy(_api, name, namespace, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function patchCrdProjectcalicoOrgV1NamespacedNetworkPolicy(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String, namespace::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_patchCrdProjectcalicoOrgV1NamespacedNetworkPolicy(_api, name, namespace, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_patchCrdProjectcalicoOrgV1NamespacedNetworkSet(_api::CrdProjectcalicoOrgV1Api, name::String, namespace::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "PATCH", OrgProjectcalicoCrdV1NetworkSet, "/apis/crd.projectcalico.org/v1/namespaces/{namespace}/networksets/{name}", ["BearerToken"], body)
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.path, "namespace", namespace)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "fieldManager", fieldManager)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json-patch+json", "application/merge-patch+json", "application/apply-patch+yaml"] : [_mediaType])
    return _ctx
end

"""

partially update the specified NetworkSet
Param: name::String (required)
Param: namespace::String (required)
Param: body::IoK8sApimachineryPkgApisMetaV1Patch (required)
Param: pretty::String
Param: dryRun::String
Param: fieldManager::String
Return: OrgProjectcalicoCrdV1NetworkSet
"""
function patchCrdProjectcalicoOrgV1NamespacedNetworkSet(_api::CrdProjectcalicoOrgV1Api, name::String, namespace::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_patchCrdProjectcalicoOrgV1NamespacedNetworkSet(_api, name, namespace, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function patchCrdProjectcalicoOrgV1NamespacedNetworkSet(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String, namespace::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_patchCrdProjectcalicoOrgV1NamespacedNetworkSet(_api, name, namespace, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_readCrdProjectcalicoOrgV1BGPConfiguration(_api::CrdProjectcalicoOrgV1Api, name::String; pretty=nothing, resourceVersion=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "GET", OrgProjectcalicoCrdV1BGPConfiguration, "/apis/crd.projectcalico.org/v1/bgpconfigurations/{name}", ["BearerToken"])
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "resourceVersion", resourceVersion)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

read the specified BGPConfiguration
Param: name::String (required)
Param: pretty::String
Param: resourceVersion::String
Return: OrgProjectcalicoCrdV1BGPConfiguration
"""
function readCrdProjectcalicoOrgV1BGPConfiguration(_api::CrdProjectcalicoOrgV1Api, name::String; pretty=nothing, resourceVersion=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_readCrdProjectcalicoOrgV1BGPConfiguration(_api, name; pretty=pretty, resourceVersion=resourceVersion, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function readCrdProjectcalicoOrgV1BGPConfiguration(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String; pretty=nothing, resourceVersion=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_readCrdProjectcalicoOrgV1BGPConfiguration(_api, name; pretty=pretty, resourceVersion=resourceVersion, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_readCrdProjectcalicoOrgV1BGPPeer(_api::CrdProjectcalicoOrgV1Api, name::String; pretty=nothing, resourceVersion=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "GET", OrgProjectcalicoCrdV1BGPPeer, "/apis/crd.projectcalico.org/v1/bgppeers/{name}", ["BearerToken"])
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "resourceVersion", resourceVersion)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

read the specified BGPPeer
Param: name::String (required)
Param: pretty::String
Param: resourceVersion::String
Return: OrgProjectcalicoCrdV1BGPPeer
"""
function readCrdProjectcalicoOrgV1BGPPeer(_api::CrdProjectcalicoOrgV1Api, name::String; pretty=nothing, resourceVersion=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_readCrdProjectcalicoOrgV1BGPPeer(_api, name; pretty=pretty, resourceVersion=resourceVersion, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function readCrdProjectcalicoOrgV1BGPPeer(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String; pretty=nothing, resourceVersion=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_readCrdProjectcalicoOrgV1BGPPeer(_api, name; pretty=pretty, resourceVersion=resourceVersion, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_readCrdProjectcalicoOrgV1BlockAffinity(_api::CrdProjectcalicoOrgV1Api, name::String; pretty=nothing, resourceVersion=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "GET", OrgProjectcalicoCrdV1BlockAffinity, "/apis/crd.projectcalico.org/v1/blockaffinities/{name}", ["BearerToken"])
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "resourceVersion", resourceVersion)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

read the specified BlockAffinity
Param: name::String (required)
Param: pretty::String
Param: resourceVersion::String
Return: OrgProjectcalicoCrdV1BlockAffinity
"""
function readCrdProjectcalicoOrgV1BlockAffinity(_api::CrdProjectcalicoOrgV1Api, name::String; pretty=nothing, resourceVersion=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_readCrdProjectcalicoOrgV1BlockAffinity(_api, name; pretty=pretty, resourceVersion=resourceVersion, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function readCrdProjectcalicoOrgV1BlockAffinity(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String; pretty=nothing, resourceVersion=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_readCrdProjectcalicoOrgV1BlockAffinity(_api, name; pretty=pretty, resourceVersion=resourceVersion, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_readCrdProjectcalicoOrgV1ClusterInformation(_api::CrdProjectcalicoOrgV1Api, name::String; pretty=nothing, resourceVersion=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "GET", OrgProjectcalicoCrdV1ClusterInformation, "/apis/crd.projectcalico.org/v1/clusterinformations/{name}", ["BearerToken"])
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "resourceVersion", resourceVersion)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

read the specified ClusterInformation
Param: name::String (required)
Param: pretty::String
Param: resourceVersion::String
Return: OrgProjectcalicoCrdV1ClusterInformation
"""
function readCrdProjectcalicoOrgV1ClusterInformation(_api::CrdProjectcalicoOrgV1Api, name::String; pretty=nothing, resourceVersion=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_readCrdProjectcalicoOrgV1ClusterInformation(_api, name; pretty=pretty, resourceVersion=resourceVersion, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function readCrdProjectcalicoOrgV1ClusterInformation(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String; pretty=nothing, resourceVersion=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_readCrdProjectcalicoOrgV1ClusterInformation(_api, name; pretty=pretty, resourceVersion=resourceVersion, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_readCrdProjectcalicoOrgV1FelixConfiguration(_api::CrdProjectcalicoOrgV1Api, name::String; pretty=nothing, resourceVersion=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "GET", OrgProjectcalicoCrdV1FelixConfiguration, "/apis/crd.projectcalico.org/v1/felixconfigurations/{name}", ["BearerToken"])
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "resourceVersion", resourceVersion)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

read the specified FelixConfiguration
Param: name::String (required)
Param: pretty::String
Param: resourceVersion::String
Return: OrgProjectcalicoCrdV1FelixConfiguration
"""
function readCrdProjectcalicoOrgV1FelixConfiguration(_api::CrdProjectcalicoOrgV1Api, name::String; pretty=nothing, resourceVersion=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_readCrdProjectcalicoOrgV1FelixConfiguration(_api, name; pretty=pretty, resourceVersion=resourceVersion, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function readCrdProjectcalicoOrgV1FelixConfiguration(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String; pretty=nothing, resourceVersion=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_readCrdProjectcalicoOrgV1FelixConfiguration(_api, name; pretty=pretty, resourceVersion=resourceVersion, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_readCrdProjectcalicoOrgV1GlobalNetworkPolicy(_api::CrdProjectcalicoOrgV1Api, name::String; pretty=nothing, resourceVersion=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "GET", OrgProjectcalicoCrdV1GlobalNetworkPolicy, "/apis/crd.projectcalico.org/v1/globalnetworkpolicies/{name}", ["BearerToken"])
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "resourceVersion", resourceVersion)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

read the specified GlobalNetworkPolicy
Param: name::String (required)
Param: pretty::String
Param: resourceVersion::String
Return: OrgProjectcalicoCrdV1GlobalNetworkPolicy
"""
function readCrdProjectcalicoOrgV1GlobalNetworkPolicy(_api::CrdProjectcalicoOrgV1Api, name::String; pretty=nothing, resourceVersion=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_readCrdProjectcalicoOrgV1GlobalNetworkPolicy(_api, name; pretty=pretty, resourceVersion=resourceVersion, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function readCrdProjectcalicoOrgV1GlobalNetworkPolicy(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String; pretty=nothing, resourceVersion=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_readCrdProjectcalicoOrgV1GlobalNetworkPolicy(_api, name; pretty=pretty, resourceVersion=resourceVersion, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_readCrdProjectcalicoOrgV1GlobalNetworkSet(_api::CrdProjectcalicoOrgV1Api, name::String; pretty=nothing, resourceVersion=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "GET", OrgProjectcalicoCrdV1GlobalNetworkSet, "/apis/crd.projectcalico.org/v1/globalnetworksets/{name}", ["BearerToken"])
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "resourceVersion", resourceVersion)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

read the specified GlobalNetworkSet
Param: name::String (required)
Param: pretty::String
Param: resourceVersion::String
Return: OrgProjectcalicoCrdV1GlobalNetworkSet
"""
function readCrdProjectcalicoOrgV1GlobalNetworkSet(_api::CrdProjectcalicoOrgV1Api, name::String; pretty=nothing, resourceVersion=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_readCrdProjectcalicoOrgV1GlobalNetworkSet(_api, name; pretty=pretty, resourceVersion=resourceVersion, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function readCrdProjectcalicoOrgV1GlobalNetworkSet(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String; pretty=nothing, resourceVersion=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_readCrdProjectcalicoOrgV1GlobalNetworkSet(_api, name; pretty=pretty, resourceVersion=resourceVersion, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_readCrdProjectcalicoOrgV1HostEndpoint(_api::CrdProjectcalicoOrgV1Api, name::String; pretty=nothing, resourceVersion=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "GET", OrgProjectcalicoCrdV1HostEndpoint, "/apis/crd.projectcalico.org/v1/hostendpoints/{name}", ["BearerToken"])
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "resourceVersion", resourceVersion)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

read the specified HostEndpoint
Param: name::String (required)
Param: pretty::String
Param: resourceVersion::String
Return: OrgProjectcalicoCrdV1HostEndpoint
"""
function readCrdProjectcalicoOrgV1HostEndpoint(_api::CrdProjectcalicoOrgV1Api, name::String; pretty=nothing, resourceVersion=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_readCrdProjectcalicoOrgV1HostEndpoint(_api, name; pretty=pretty, resourceVersion=resourceVersion, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function readCrdProjectcalicoOrgV1HostEndpoint(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String; pretty=nothing, resourceVersion=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_readCrdProjectcalicoOrgV1HostEndpoint(_api, name; pretty=pretty, resourceVersion=resourceVersion, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_readCrdProjectcalicoOrgV1IPAMBlock(_api::CrdProjectcalicoOrgV1Api, name::String; pretty=nothing, resourceVersion=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "GET", OrgProjectcalicoCrdV1IPAMBlock, "/apis/crd.projectcalico.org/v1/ipamblocks/{name}", ["BearerToken"])
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "resourceVersion", resourceVersion)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

read the specified IPAMBlock
Param: name::String (required)
Param: pretty::String
Param: resourceVersion::String
Return: OrgProjectcalicoCrdV1IPAMBlock
"""
function readCrdProjectcalicoOrgV1IPAMBlock(_api::CrdProjectcalicoOrgV1Api, name::String; pretty=nothing, resourceVersion=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_readCrdProjectcalicoOrgV1IPAMBlock(_api, name; pretty=pretty, resourceVersion=resourceVersion, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function readCrdProjectcalicoOrgV1IPAMBlock(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String; pretty=nothing, resourceVersion=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_readCrdProjectcalicoOrgV1IPAMBlock(_api, name; pretty=pretty, resourceVersion=resourceVersion, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_readCrdProjectcalicoOrgV1IPPool(_api::CrdProjectcalicoOrgV1Api, name::String; pretty=nothing, resourceVersion=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "GET", OrgProjectcalicoCrdV1IPPool, "/apis/crd.projectcalico.org/v1/ippools/{name}", ["BearerToken"])
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "resourceVersion", resourceVersion)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

read the specified IPPool
Param: name::String (required)
Param: pretty::String
Param: resourceVersion::String
Return: OrgProjectcalicoCrdV1IPPool
"""
function readCrdProjectcalicoOrgV1IPPool(_api::CrdProjectcalicoOrgV1Api, name::String; pretty=nothing, resourceVersion=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_readCrdProjectcalicoOrgV1IPPool(_api, name; pretty=pretty, resourceVersion=resourceVersion, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function readCrdProjectcalicoOrgV1IPPool(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String; pretty=nothing, resourceVersion=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_readCrdProjectcalicoOrgV1IPPool(_api, name; pretty=pretty, resourceVersion=resourceVersion, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_readCrdProjectcalicoOrgV1NamespacedNetworkPolicy(_api::CrdProjectcalicoOrgV1Api, name::String, namespace::String; pretty=nothing, resourceVersion=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "GET", OrgProjectcalicoCrdV1NetworkPolicy, "/apis/crd.projectcalico.org/v1/namespaces/{namespace}/networkpolicies/{name}", ["BearerToken"])
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.path, "namespace", namespace)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "resourceVersion", resourceVersion)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

read the specified NetworkPolicy
Param: name::String (required)
Param: namespace::String (required)
Param: pretty::String
Param: resourceVersion::String
Return: OrgProjectcalicoCrdV1NetworkPolicy
"""
function readCrdProjectcalicoOrgV1NamespacedNetworkPolicy(_api::CrdProjectcalicoOrgV1Api, name::String, namespace::String; pretty=nothing, resourceVersion=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_readCrdProjectcalicoOrgV1NamespacedNetworkPolicy(_api, name, namespace; pretty=pretty, resourceVersion=resourceVersion, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function readCrdProjectcalicoOrgV1NamespacedNetworkPolicy(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String, namespace::String; pretty=nothing, resourceVersion=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_readCrdProjectcalicoOrgV1NamespacedNetworkPolicy(_api, name, namespace; pretty=pretty, resourceVersion=resourceVersion, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_readCrdProjectcalicoOrgV1NamespacedNetworkSet(_api::CrdProjectcalicoOrgV1Api, name::String, namespace::String; pretty=nothing, resourceVersion=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "GET", OrgProjectcalicoCrdV1NetworkSet, "/apis/crd.projectcalico.org/v1/namespaces/{namespace}/networksets/{name}", ["BearerToken"])
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.path, "namespace", namespace)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "resourceVersion", resourceVersion)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

read the specified NetworkSet
Param: name::String (required)
Param: namespace::String (required)
Param: pretty::String
Param: resourceVersion::String
Return: OrgProjectcalicoCrdV1NetworkSet
"""
function readCrdProjectcalicoOrgV1NamespacedNetworkSet(_api::CrdProjectcalicoOrgV1Api, name::String, namespace::String; pretty=nothing, resourceVersion=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_readCrdProjectcalicoOrgV1NamespacedNetworkSet(_api, name, namespace; pretty=pretty, resourceVersion=resourceVersion, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function readCrdProjectcalicoOrgV1NamespacedNetworkSet(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String, namespace::String; pretty=nothing, resourceVersion=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_readCrdProjectcalicoOrgV1NamespacedNetworkSet(_api, name, namespace; pretty=pretty, resourceVersion=resourceVersion, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_replaceCrdProjectcalicoOrgV1BGPConfiguration(_api::CrdProjectcalicoOrgV1Api, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "PUT", OrgProjectcalicoCrdV1BGPConfiguration, "/apis/crd.projectcalico.org/v1/bgpconfigurations/{name}", ["BearerToken"], body)
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "fieldManager", fieldManager)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

replace the specified BGPConfiguration
Param: name::String (required)
Param: body::OrgProjectcalicoCrdV1BGPConfiguration (required)
Param: pretty::String
Param: dryRun::String
Param: fieldManager::String
Return: OrgProjectcalicoCrdV1BGPConfiguration
"""
function replaceCrdProjectcalicoOrgV1BGPConfiguration(_api::CrdProjectcalicoOrgV1Api, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_replaceCrdProjectcalicoOrgV1BGPConfiguration(_api, name, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function replaceCrdProjectcalicoOrgV1BGPConfiguration(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_replaceCrdProjectcalicoOrgV1BGPConfiguration(_api, name, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_replaceCrdProjectcalicoOrgV1BGPPeer(_api::CrdProjectcalicoOrgV1Api, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "PUT", OrgProjectcalicoCrdV1BGPPeer, "/apis/crd.projectcalico.org/v1/bgppeers/{name}", ["BearerToken"], body)
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "fieldManager", fieldManager)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

replace the specified BGPPeer
Param: name::String (required)
Param: body::OrgProjectcalicoCrdV1BGPPeer (required)
Param: pretty::String
Param: dryRun::String
Param: fieldManager::String
Return: OrgProjectcalicoCrdV1BGPPeer
"""
function replaceCrdProjectcalicoOrgV1BGPPeer(_api::CrdProjectcalicoOrgV1Api, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_replaceCrdProjectcalicoOrgV1BGPPeer(_api, name, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function replaceCrdProjectcalicoOrgV1BGPPeer(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_replaceCrdProjectcalicoOrgV1BGPPeer(_api, name, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_replaceCrdProjectcalicoOrgV1BlockAffinity(_api::CrdProjectcalicoOrgV1Api, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "PUT", OrgProjectcalicoCrdV1BlockAffinity, "/apis/crd.projectcalico.org/v1/blockaffinities/{name}", ["BearerToken"], body)
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "fieldManager", fieldManager)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

replace the specified BlockAffinity
Param: name::String (required)
Param: body::OrgProjectcalicoCrdV1BlockAffinity (required)
Param: pretty::String
Param: dryRun::String
Param: fieldManager::String
Return: OrgProjectcalicoCrdV1BlockAffinity
"""
function replaceCrdProjectcalicoOrgV1BlockAffinity(_api::CrdProjectcalicoOrgV1Api, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_replaceCrdProjectcalicoOrgV1BlockAffinity(_api, name, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function replaceCrdProjectcalicoOrgV1BlockAffinity(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_replaceCrdProjectcalicoOrgV1BlockAffinity(_api, name, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_replaceCrdProjectcalicoOrgV1ClusterInformation(_api::CrdProjectcalicoOrgV1Api, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "PUT", OrgProjectcalicoCrdV1ClusterInformation, "/apis/crd.projectcalico.org/v1/clusterinformations/{name}", ["BearerToken"], body)
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "fieldManager", fieldManager)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

replace the specified ClusterInformation
Param: name::String (required)
Param: body::OrgProjectcalicoCrdV1ClusterInformation (required)
Param: pretty::String
Param: dryRun::String
Param: fieldManager::String
Return: OrgProjectcalicoCrdV1ClusterInformation
"""
function replaceCrdProjectcalicoOrgV1ClusterInformation(_api::CrdProjectcalicoOrgV1Api, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_replaceCrdProjectcalicoOrgV1ClusterInformation(_api, name, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function replaceCrdProjectcalicoOrgV1ClusterInformation(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_replaceCrdProjectcalicoOrgV1ClusterInformation(_api, name, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_replaceCrdProjectcalicoOrgV1FelixConfiguration(_api::CrdProjectcalicoOrgV1Api, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "PUT", OrgProjectcalicoCrdV1FelixConfiguration, "/apis/crd.projectcalico.org/v1/felixconfigurations/{name}", ["BearerToken"], body)
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "fieldManager", fieldManager)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

replace the specified FelixConfiguration
Param: name::String (required)
Param: body::OrgProjectcalicoCrdV1FelixConfiguration (required)
Param: pretty::String
Param: dryRun::String
Param: fieldManager::String
Return: OrgProjectcalicoCrdV1FelixConfiguration
"""
function replaceCrdProjectcalicoOrgV1FelixConfiguration(_api::CrdProjectcalicoOrgV1Api, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_replaceCrdProjectcalicoOrgV1FelixConfiguration(_api, name, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function replaceCrdProjectcalicoOrgV1FelixConfiguration(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_replaceCrdProjectcalicoOrgV1FelixConfiguration(_api, name, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_replaceCrdProjectcalicoOrgV1GlobalNetworkPolicy(_api::CrdProjectcalicoOrgV1Api, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "PUT", OrgProjectcalicoCrdV1GlobalNetworkPolicy, "/apis/crd.projectcalico.org/v1/globalnetworkpolicies/{name}", ["BearerToken"], body)
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "fieldManager", fieldManager)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

replace the specified GlobalNetworkPolicy
Param: name::String (required)
Param: body::OrgProjectcalicoCrdV1GlobalNetworkPolicy (required)
Param: pretty::String
Param: dryRun::String
Param: fieldManager::String
Return: OrgProjectcalicoCrdV1GlobalNetworkPolicy
"""
function replaceCrdProjectcalicoOrgV1GlobalNetworkPolicy(_api::CrdProjectcalicoOrgV1Api, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_replaceCrdProjectcalicoOrgV1GlobalNetworkPolicy(_api, name, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function replaceCrdProjectcalicoOrgV1GlobalNetworkPolicy(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_replaceCrdProjectcalicoOrgV1GlobalNetworkPolicy(_api, name, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_replaceCrdProjectcalicoOrgV1GlobalNetworkSet(_api::CrdProjectcalicoOrgV1Api, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "PUT", OrgProjectcalicoCrdV1GlobalNetworkSet, "/apis/crd.projectcalico.org/v1/globalnetworksets/{name}", ["BearerToken"], body)
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "fieldManager", fieldManager)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

replace the specified GlobalNetworkSet
Param: name::String (required)
Param: body::OrgProjectcalicoCrdV1GlobalNetworkSet (required)
Param: pretty::String
Param: dryRun::String
Param: fieldManager::String
Return: OrgProjectcalicoCrdV1GlobalNetworkSet
"""
function replaceCrdProjectcalicoOrgV1GlobalNetworkSet(_api::CrdProjectcalicoOrgV1Api, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_replaceCrdProjectcalicoOrgV1GlobalNetworkSet(_api, name, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function replaceCrdProjectcalicoOrgV1GlobalNetworkSet(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_replaceCrdProjectcalicoOrgV1GlobalNetworkSet(_api, name, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_replaceCrdProjectcalicoOrgV1HostEndpoint(_api::CrdProjectcalicoOrgV1Api, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "PUT", OrgProjectcalicoCrdV1HostEndpoint, "/apis/crd.projectcalico.org/v1/hostendpoints/{name}", ["BearerToken"], body)
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "fieldManager", fieldManager)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

replace the specified HostEndpoint
Param: name::String (required)
Param: body::OrgProjectcalicoCrdV1HostEndpoint (required)
Param: pretty::String
Param: dryRun::String
Param: fieldManager::String
Return: OrgProjectcalicoCrdV1HostEndpoint
"""
function replaceCrdProjectcalicoOrgV1HostEndpoint(_api::CrdProjectcalicoOrgV1Api, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_replaceCrdProjectcalicoOrgV1HostEndpoint(_api, name, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function replaceCrdProjectcalicoOrgV1HostEndpoint(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_replaceCrdProjectcalicoOrgV1HostEndpoint(_api, name, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_replaceCrdProjectcalicoOrgV1IPAMBlock(_api::CrdProjectcalicoOrgV1Api, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "PUT", OrgProjectcalicoCrdV1IPAMBlock, "/apis/crd.projectcalico.org/v1/ipamblocks/{name}", ["BearerToken"], body)
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "fieldManager", fieldManager)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

replace the specified IPAMBlock
Param: name::String (required)
Param: body::OrgProjectcalicoCrdV1IPAMBlock (required)
Param: pretty::String
Param: dryRun::String
Param: fieldManager::String
Return: OrgProjectcalicoCrdV1IPAMBlock
"""
function replaceCrdProjectcalicoOrgV1IPAMBlock(_api::CrdProjectcalicoOrgV1Api, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_replaceCrdProjectcalicoOrgV1IPAMBlock(_api, name, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function replaceCrdProjectcalicoOrgV1IPAMBlock(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_replaceCrdProjectcalicoOrgV1IPAMBlock(_api, name, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_replaceCrdProjectcalicoOrgV1IPPool(_api::CrdProjectcalicoOrgV1Api, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "PUT", OrgProjectcalicoCrdV1IPPool, "/apis/crd.projectcalico.org/v1/ippools/{name}", ["BearerToken"], body)
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "fieldManager", fieldManager)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

replace the specified IPPool
Param: name::String (required)
Param: body::OrgProjectcalicoCrdV1IPPool (required)
Param: pretty::String
Param: dryRun::String
Param: fieldManager::String
Return: OrgProjectcalicoCrdV1IPPool
"""
function replaceCrdProjectcalicoOrgV1IPPool(_api::CrdProjectcalicoOrgV1Api, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_replaceCrdProjectcalicoOrgV1IPPool(_api, name, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function replaceCrdProjectcalicoOrgV1IPPool(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_replaceCrdProjectcalicoOrgV1IPPool(_api, name, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_replaceCrdProjectcalicoOrgV1NamespacedNetworkPolicy(_api::CrdProjectcalicoOrgV1Api, name::String, namespace::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "PUT", OrgProjectcalicoCrdV1NetworkPolicy, "/apis/crd.projectcalico.org/v1/namespaces/{namespace}/networkpolicies/{name}", ["BearerToken"], body)
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.path, "namespace", namespace)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "fieldManager", fieldManager)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

replace the specified NetworkPolicy
Param: name::String (required)
Param: namespace::String (required)
Param: body::OrgProjectcalicoCrdV1NetworkPolicy (required)
Param: pretty::String
Param: dryRun::String
Param: fieldManager::String
Return: OrgProjectcalicoCrdV1NetworkPolicy
"""
function replaceCrdProjectcalicoOrgV1NamespacedNetworkPolicy(_api::CrdProjectcalicoOrgV1Api, name::String, namespace::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_replaceCrdProjectcalicoOrgV1NamespacedNetworkPolicy(_api, name, namespace, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function replaceCrdProjectcalicoOrgV1NamespacedNetworkPolicy(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String, namespace::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_replaceCrdProjectcalicoOrgV1NamespacedNetworkPolicy(_api, name, namespace, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

function _swaggerinternal_replaceCrdProjectcalicoOrgV1NamespacedNetworkSet(_api::CrdProjectcalicoOrgV1Api, name::String, namespace::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = Swagger.Ctx(_api.client, "PUT", OrgProjectcalicoCrdV1NetworkSet, "/apis/crd.projectcalico.org/v1/namespaces/{namespace}/networksets/{name}", ["BearerToken"], body)
    Swagger.set_param(_ctx.path, "name", name)  # type String
    Swagger.set_param(_ctx.path, "namespace", namespace)  # type String
    Swagger.set_param(_ctx.query, "pretty", pretty)  # type String
    Swagger.set_param(_ctx.query, "dryRun", dryRun)  # type String
    Swagger.set_param(_ctx.query, "fieldManager", fieldManager)  # type String
    Swagger.set_header_accept(_ctx, ["application/json", "application/yaml"])
    Swagger.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", "application/yaml"] : [_mediaType])
    return _ctx
end

"""

replace the specified NetworkSet
Param: name::String (required)
Param: namespace::String (required)
Param: body::OrgProjectcalicoCrdV1NetworkSet (required)
Param: pretty::String
Param: dryRun::String
Param: fieldManager::String
Return: OrgProjectcalicoCrdV1NetworkSet
"""
function replaceCrdProjectcalicoOrgV1NamespacedNetworkSet(_api::CrdProjectcalicoOrgV1Api, name::String, namespace::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_replaceCrdProjectcalicoOrgV1NamespacedNetworkSet(_api, name, namespace, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx)
end

function replaceCrdProjectcalicoOrgV1NamespacedNetworkSet(_api::CrdProjectcalicoOrgV1Api, response_stream::Channel, name::String, namespace::String, body; pretty=nothing, dryRun=nothing, fieldManager=nothing, _mediaType=nothing)
    _ctx = _swaggerinternal_replaceCrdProjectcalicoOrgV1NamespacedNetworkSet(_api, name, namespace, body; pretty=pretty, dryRun=dryRun, fieldManager=fieldManager, _mediaType=_mediaType)
    Swagger.exec(_ctx, response_stream)
end

export createCrdProjectcalicoOrgV1BGPConfiguration, createCrdProjectcalicoOrgV1BGPPeer, createCrdProjectcalicoOrgV1BlockAffinity, createCrdProjectcalicoOrgV1ClusterInformation, createCrdProjectcalicoOrgV1FelixConfiguration, createCrdProjectcalicoOrgV1GlobalNetworkPolicy, createCrdProjectcalicoOrgV1GlobalNetworkSet, createCrdProjectcalicoOrgV1HostEndpoint, createCrdProjectcalicoOrgV1IPAMBlock, createCrdProjectcalicoOrgV1IPPool, createCrdProjectcalicoOrgV1NamespacedNetworkPolicy, createCrdProjectcalicoOrgV1NamespacedNetworkSet, deleteCrdProjectcalicoOrgV1BGPConfiguration, deleteCrdProjectcalicoOrgV1BGPPeer, deleteCrdProjectcalicoOrgV1BlockAffinity, deleteCrdProjectcalicoOrgV1ClusterInformation, deleteCrdProjectcalicoOrgV1CollectionBGPConfiguration, deleteCrdProjectcalicoOrgV1CollectionBGPPeer, deleteCrdProjectcalicoOrgV1CollectionBlockAffinity, deleteCrdProjectcalicoOrgV1CollectionClusterInformation, deleteCrdProjectcalicoOrgV1CollectionFelixConfiguration, deleteCrdProjectcalicoOrgV1CollectionGlobalNetworkPolicy, deleteCrdProjectcalicoOrgV1CollectionGlobalNetworkSet, deleteCrdProjectcalicoOrgV1CollectionHostEndpoint, deleteCrdProjectcalicoOrgV1CollectionIPAMBlock, deleteCrdProjectcalicoOrgV1CollectionIPPool, deleteCrdProjectcalicoOrgV1CollectionNamespacedNetworkPolicy, deleteCrdProjectcalicoOrgV1CollectionNamespacedNetworkSet, deleteCrdProjectcalicoOrgV1FelixConfiguration, deleteCrdProjectcalicoOrgV1GlobalNetworkPolicy, deleteCrdProjectcalicoOrgV1GlobalNetworkSet, deleteCrdProjectcalicoOrgV1HostEndpoint, deleteCrdProjectcalicoOrgV1IPAMBlock, deleteCrdProjectcalicoOrgV1IPPool, deleteCrdProjectcalicoOrgV1NamespacedNetworkPolicy, deleteCrdProjectcalicoOrgV1NamespacedNetworkSet, listCrdProjectcalicoOrgV1BGPConfiguration, listCrdProjectcalicoOrgV1BGPPeer, listCrdProjectcalicoOrgV1BlockAffinity, listCrdProjectcalicoOrgV1ClusterInformation, listCrdProjectcalicoOrgV1FelixConfiguration, listCrdProjectcalicoOrgV1GlobalNetworkPolicy, listCrdProjectcalicoOrgV1GlobalNetworkSet, listCrdProjectcalicoOrgV1HostEndpoint, listCrdProjectcalicoOrgV1IPAMBlock, listCrdProjectcalicoOrgV1IPPool, listCrdProjectcalicoOrgV1NamespacedNetworkPolicy, listCrdProjectcalicoOrgV1NamespacedNetworkSet, listCrdProjectcalicoOrgV1NetworkPolicyForAllNamespaces, listCrdProjectcalicoOrgV1NetworkSetForAllNamespaces, patchCrdProjectcalicoOrgV1BGPConfiguration, patchCrdProjectcalicoOrgV1BGPPeer, patchCrdProjectcalicoOrgV1BlockAffinity, patchCrdProjectcalicoOrgV1ClusterInformation, patchCrdProjectcalicoOrgV1FelixConfiguration, patchCrdProjectcalicoOrgV1GlobalNetworkPolicy, patchCrdProjectcalicoOrgV1GlobalNetworkSet, patchCrdProjectcalicoOrgV1HostEndpoint, patchCrdProjectcalicoOrgV1IPAMBlock, patchCrdProjectcalicoOrgV1IPPool, patchCrdProjectcalicoOrgV1NamespacedNetworkPolicy, patchCrdProjectcalicoOrgV1NamespacedNetworkSet, readCrdProjectcalicoOrgV1BGPConfiguration, readCrdProjectcalicoOrgV1BGPPeer, readCrdProjectcalicoOrgV1BlockAffinity, readCrdProjectcalicoOrgV1ClusterInformation, readCrdProjectcalicoOrgV1FelixConfiguration, readCrdProjectcalicoOrgV1GlobalNetworkPolicy, readCrdProjectcalicoOrgV1GlobalNetworkSet, readCrdProjectcalicoOrgV1HostEndpoint, readCrdProjectcalicoOrgV1IPAMBlock, readCrdProjectcalicoOrgV1IPPool, readCrdProjectcalicoOrgV1NamespacedNetworkPolicy, readCrdProjectcalicoOrgV1NamespacedNetworkSet, replaceCrdProjectcalicoOrgV1BGPConfiguration, replaceCrdProjectcalicoOrgV1BGPPeer, replaceCrdProjectcalicoOrgV1BlockAffinity, replaceCrdProjectcalicoOrgV1ClusterInformation, replaceCrdProjectcalicoOrgV1FelixConfiguration, replaceCrdProjectcalicoOrgV1GlobalNetworkPolicy, replaceCrdProjectcalicoOrgV1GlobalNetworkSet, replaceCrdProjectcalicoOrgV1HostEndpoint, replaceCrdProjectcalicoOrgV1IPAMBlock, replaceCrdProjectcalicoOrgV1IPPool, replaceCrdProjectcalicoOrgV1NamespacedNetworkPolicy, replaceCrdProjectcalicoOrgV1NamespacedNetworkSet
