# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


@doc raw"""IngressServiceBackend references a Kubernetes Service as a Backend.

    IoK8sApiNetworkingV1IngressServiceBackend(;
        name=nothing,
        port=nothing,
    )

    - name::String : Name is the referenced service. The service must exist in the same namespace as the Ingress object.
    - port::IoK8sApiNetworkingV1ServiceBackendPort : Port of the referenced service. A port name or port number is required for a IngressServiceBackend.
"""
mutable struct IoK8sApiNetworkingV1IngressServiceBackend <: SwaggerModel
    name::Any # spec type: Union{ Nothing, String } # spec name: name
    port::Any # spec type: Union{ Nothing, IoK8sApiNetworkingV1ServiceBackendPort } # spec name: port

    function IoK8sApiNetworkingV1IngressServiceBackend(;name=nothing, port=nothing)
        o = new()
        validate_property(IoK8sApiNetworkingV1IngressServiceBackend, Symbol("name"), name)
        setfield!(o, Symbol("name"), name)
        validate_property(IoK8sApiNetworkingV1IngressServiceBackend, Symbol("port"), port)
        setfield!(o, Symbol("port"), port)
        o
    end
end # type IoK8sApiNetworkingV1IngressServiceBackend

const _property_map_IoK8sApiNetworkingV1IngressServiceBackend = Dict{Symbol,Symbol}(Symbol("name")=>Symbol("name"), Symbol("port")=>Symbol("port"))
const _property_types_IoK8sApiNetworkingV1IngressServiceBackend = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("port")=>"IoK8sApiNetworkingV1ServiceBackendPort")
Base.propertynames(::Type{ IoK8sApiNetworkingV1IngressServiceBackend }) = collect(keys(_property_map_IoK8sApiNetworkingV1IngressServiceBackend))
Swagger.property_type(::Type{ IoK8sApiNetworkingV1IngressServiceBackend }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiNetworkingV1IngressServiceBackend[name]))}
Swagger.field_name(::Type{ IoK8sApiNetworkingV1IngressServiceBackend }, property_name::Symbol) =  _property_map_IoK8sApiNetworkingV1IngressServiceBackend[property_name]

function check_required(o::IoK8sApiNetworkingV1IngressServiceBackend)
    (getproperty(o, Symbol("name")) === nothing) && (return false)
    true
end

function validate_property(::Type{ IoK8sApiNetworkingV1IngressServiceBackend }, name::Symbol, val)
end
