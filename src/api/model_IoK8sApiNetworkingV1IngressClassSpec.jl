# This file was generated by the Julia Swagger Code Generator
# Do not modify this file directly. Modify the swagger specification instead.


@doc raw"""IngressClassSpec provides information about the class of an Ingress.

    IoK8sApiNetworkingV1IngressClassSpec(;
        controller=nothing,
        parameters=nothing,
    )

    - controller::String : Controller refers to the name of the controller that should handle this class. This allows for different \&quot;flavors\&quot; that are controlled by the same controller. For example, you may have different Parameters for the same implementing controller. This should be specified as a domain-prefixed path no more than 250 characters in length, e.g. \&quot;acme.io/ingress-controller\&quot;. This field is immutable.
    - parameters::IoK8sApiCoreV1TypedLocalObjectReference : Parameters is a link to a custom resource containing additional configuration for the controller. This is optional if the controller does not require extra parameters.
"""
mutable struct IoK8sApiNetworkingV1IngressClassSpec <: SwaggerModel
    controller::Any # spec type: Union{ Nothing, String } # spec name: controller
    parameters::Any # spec type: Union{ Nothing, IoK8sApiCoreV1TypedLocalObjectReference } # spec name: parameters

    function IoK8sApiNetworkingV1IngressClassSpec(;controller=nothing, parameters=nothing)
        o = new()
        validate_property(IoK8sApiNetworkingV1IngressClassSpec, Symbol("controller"), controller)
        setfield!(o, Symbol("controller"), controller)
        validate_property(IoK8sApiNetworkingV1IngressClassSpec, Symbol("parameters"), parameters)
        setfield!(o, Symbol("parameters"), parameters)
        o
    end
end # type IoK8sApiNetworkingV1IngressClassSpec

const _property_map_IoK8sApiNetworkingV1IngressClassSpec = Dict{Symbol,Symbol}(Symbol("controller")=>Symbol("controller"), Symbol("parameters")=>Symbol("parameters"))
const _property_types_IoK8sApiNetworkingV1IngressClassSpec = Dict{Symbol,String}(Symbol("controller")=>"String", Symbol("parameters")=>"IoK8sApiCoreV1TypedLocalObjectReference")
Base.propertynames(::Type{ IoK8sApiNetworkingV1IngressClassSpec }) = collect(keys(_property_map_IoK8sApiNetworkingV1IngressClassSpec))
Swagger.property_type(::Type{ IoK8sApiNetworkingV1IngressClassSpec }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_IoK8sApiNetworkingV1IngressClassSpec[name]))}
Swagger.field_name(::Type{ IoK8sApiNetworkingV1IngressClassSpec }, property_name::Symbol) =  _property_map_IoK8sApiNetworkingV1IngressClassSpec[property_name]

function check_required(o::IoK8sApiNetworkingV1IngressClassSpec)
    true
end

function validate_property(::Type{ IoK8sApiNetworkingV1IngressClassSpec }, name::Symbol, val)
end
